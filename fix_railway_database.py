#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Railway
–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É patient –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
"""

import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import SQLAlchemyError
from datetime import datetime

def fix_railway_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Railway"""
    
    # –ü–æ–ª—É—á–∞–µ–º DATABASE_URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    database_url = os.getenv('DATABASE_URL')
    
    if not database_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(database_url)
        
        with engine.connect() as conn:
            print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Railway...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ patient
            result = conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'patient'
                );
            """))
            
            table_exists = result.fetchone()[0]
            
            if not table_exists:
                print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã patient...")
                
                # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É patient
                conn.execute(text("""
                    CREATE TABLE patient (
                        id SERIAL PRIMARY KEY,
                        date VARCHAR(20) NOT NULL,
                        patient_name VARCHAR(100) NOT NULL,
                        age INTEGER NOT NULL,
                        pregnancy_weeks INTEGER NOT NULL,
                        weight_before FLOAT NOT NULL,
                        weight_after FLOAT NOT NULL,
                        complications TEXT,
                        notes TEXT,
                        midwife VARCHAR(100) NOT NULL,
                        birth_date VARCHAR(20) NOT NULL,
                        birth_time VARCHAR(10) NOT NULL,
                        child_gender VARCHAR(10) NOT NULL,
                        child_weight INTEGER NOT NULL,
                        delivery_method VARCHAR(50) NOT NULL,
                        anesthesia VARCHAR(50) NOT NULL,
                        blood_loss INTEGER NOT NULL,
                        labor_duration FLOAT NOT NULL,
                        other_diseases TEXT,
                        gestosis VARCHAR(10) NOT NULL,
                        diabetes VARCHAR(10) NOT NULL,
                        hypertension VARCHAR(10) NOT NULL,
                        anemia VARCHAR(10) NOT NULL,
                        infections VARCHAR(10) NOT NULL,
                        placenta_pathology VARCHAR(10) NOT NULL,
                        polyhydramnios VARCHAR(10) NOT NULL,
                        oligohydramnios VARCHAR(10) NOT NULL,
                        pls VARCHAR(10) NOT NULL,
                        pts VARCHAR(10) NOT NULL,
                        eclampsia VARCHAR(10) NOT NULL,
                        gestational_hypertension VARCHAR(10) NOT NULL,
                        placenta_previa VARCHAR(10) NOT NULL,
                        shoulder_dystocia VARCHAR(10) NOT NULL,
                        third_degree_tear VARCHAR(10) NOT NULL,
                        cord_prolapse VARCHAR(10) NOT NULL,
                        postpartum_hemorrhage VARCHAR(10) NOT NULL,
                        placental_abruption VARCHAR(10) NOT NULL,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    );
                """))
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ patient —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ patient —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
            result = conn.execute(text("SELECT COUNT(*) FROM patient;"))
            count = result.fetchone()[0]
            
            if count == 0:
                print("üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                test_data = [
                    {
                        'date': '2024-01-15',
                        'patient_name': '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
                        'age': 28,
                        'pregnancy_weeks': 39,
                        'weight_before': 65.5,
                        'weight_after': 70.2,
                        'complications': '–ù–µ—Ç',
                        'notes': '–ù–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ä–æ–¥—ã',
                        'midwife': '–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤–∞',
                        'birth_date': '2024-01-15',
                        'birth_time': '14:30',
                        'child_gender': '–î–µ–≤–æ—á–∫–∞',
                        'child_weight': 3200,
                        'delivery_method': '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        'anesthesia': '–≠–ø–∏–¥—É—Ä–∞–ª—å–Ω–∞—è –∞–Ω–µ—Å—Ç–µ–∑–∏—è',
                        'blood_loss': 450,
                        'labor_duration': 8.5,
                        'other_diseases': '–ù–µ—Ç',
                        'gestosis': '–ù–µ—Ç',
                        'diabetes': '–ù–µ—Ç',
                        'hypertension': '–ù–µ—Ç',
                        'anemia': '–ù–µ—Ç',
                        'infections': '–ù–µ—Ç',
                        'placenta_pathology': '–ù–µ—Ç',
                        'polyhydramnios': '–ù–µ—Ç',
                        'oligohydramnios': '–ù–µ—Ç',
                        'pls': '–ù–µ—Ç',
                        'pts': '–ù–µ—Ç',
                        'eclampsia': '–ù–µ—Ç',
                        'gestational_hypertension': '–ù–µ—Ç',
                        'placenta_previa': '–ù–µ—Ç',
                        'shoulder_dystocia': '–ù–µ—Ç',
                        'third_degree_tear': '–ù–µ—Ç',
                        'cord_prolapse': '–ù–µ—Ç',
                        'postpartum_hemorrhage': '–ù–µ—Ç',
                        'placental_abruption': '–ù–µ—Ç'
                    },
                    {
                        'date': '2024-02-20',
                        'patient_name': '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
                        'age': 32,
                        'pregnancy_weeks': 38,
                        'weight_before': 68.0,
                        'weight_after': 72.5,
                        'complications': '–ì–µ—Å—Ç–æ–∑',
                        'notes': '–û—Å–ª–æ–∂–Ω–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        'midwife': '–î–æ–∫—Ç–æ—Ä –ö–æ–∑–ª–æ–≤–∞',
                        'birth_date': '2024-02-20',
                        'birth_time': '16:45',
                        'child_gender': '–ú–∞–ª—å—á–∏–∫',
                        'child_weight': 3500,
                        'delivery_method': '–ö–µ—Å–∞—Ä–µ–≤–æ —Å–µ—á–µ–Ω–∏–µ',
                        'anesthesia': '–û–±—â–∞—è –∞–Ω–µ—Å—Ç–µ–∑–∏—è',
                        'blood_loss': 800,
                        'labor_duration': 12.0,
                        'other_diseases': '–ù–µ—Ç',
                        'gestosis': '–î–∞',
                        'diabetes': '–ù–µ—Ç',
                        'hypertension': '–î–∞',
                        'anemia': '–ù–µ—Ç',
                        'infections': '–ù–µ—Ç',
                        'placenta_pathology': '–ù–µ—Ç',
                        'polyhydramnios': '–ù–µ—Ç',
                        'oligohydramnios': '–ù–µ—Ç',
                        'pls': '–î–∞',
                        'pts': '–ù–µ—Ç',
                        'eclampsia': '–ù–µ—Ç',
                        'gestational_hypertension': '–ù–µ—Ç',
                        'placenta_previa': '–ù–µ—Ç',
                        'shoulder_dystocia': '–ù–µ—Ç',
                        'third_degree_tear': '–ù–µ—Ç',
                        'cord_prolapse': '–ù–µ—Ç',
                        'postpartum_hemorrhage': '–ù–µ—Ç',
                        'placental_abruption': '–ù–µ—Ç'
                    },
                    {
                        'date': '2024-03-10',
                        'patient_name': '–ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
                        'age': 25,
                        'pregnancy_weeks': 40,
                        'weight_before': 62.0,
                        'weight_after': 66.8,
                        'complications': '–ü–†–ö',
                        'notes': '–ü–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–µ –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ',
                        'midwife': '–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤–∞',
                        'birth_date': '2024-03-10',
                        'birth_time': '09:15',
                        'child_gender': '–î–µ–≤–æ—á–∫–∞',
                        'child_weight': 3100,
                        'delivery_method': '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        'anesthesia': '–ë–µ–∑ –∞–Ω–µ—Å—Ç–µ–∑–∏–∏',
                        'blood_loss': 1200,
                        'labor_duration': 6.5,
                        'other_diseases': '–ù–µ—Ç',
                        'gestosis': '–ù–µ—Ç',
                        'diabetes': '–ù–µ—Ç',
                        'hypertension': '–ù–µ—Ç',
                        'anemia': '–ù–µ—Ç',
                        'infections': '–ù–µ—Ç',
                        'placenta_pathology': '–ù–µ—Ç',
                        'polyhydramnios': '–ù–µ—Ç',
                        'oligohydramnios': '–ù–µ—Ç',
                        'pls': '–ù–µ—Ç',
                        'pts': '–ù–µ—Ç',
                        'eclampsia': '–ù–µ—Ç',
                        'gestational_hypertension': '–ù–µ—Ç',
                        'placenta_previa': '–ù–µ—Ç',
                        'shoulder_dystocia': '–ù–µ—Ç',
                        'third_degree_tear': '–ù–µ—Ç',
                        'cord_prolapse': '–ù–µ—Ç',
                        'postpartum_hemorrhage': '–î–∞',
                        'placental_abruption': '–ù–µ—Ç'
                    }
                ]
                
                for data in test_data:
                    conn.execute(text("""
                        INSERT INTO patient (
                            date, patient_name, age, pregnancy_weeks, weight_before, weight_after,
                            complications, notes, midwife, birth_date, birth_time, child_gender,
                            child_weight, delivery_method, anesthesia, blood_loss, labor_duration,
                            other_diseases, gestosis, diabetes, hypertension, anemia, infections,
                            placenta_pathology, polyhydramnios, oligohydramnios, pls, pts, eclampsia,
                            gestational_hypertension, placenta_previa, shoulder_dystocia, third_degree_tear,
                            cord_prolapse, postpartum_hemorrhage, placental_abruption
                        ) VALUES (
                            :date, :patient_name, :age, :pregnancy_weeks, :weight_before, :weight_after,
                            :complications, :notes, :midwife, :birth_date, :birth_time, :child_gender,
                            :child_weight, :delivery_method, :anesthesia, :blood_loss, :labor_duration,
                            :other_diseases, :gestosis, :diabetes, :hypertension, :anemia, :infections,
                            :placenta_pathology, :polyhydramnios, :oligohydramnios, :pls, :pts, :eclampsia,
                            :gestational_hypertension, :placenta_previa, :shoulder_dystocia, :third_degree_tear,
                            :cord_prolapse, :postpartum_hemorrhage, :placental_abruption
                        )
                    """), data)
                
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            else:
                print(f"‚úÖ –í —Ç–∞–±–ª–∏—Ü–µ —É–∂–µ –µ—Å—Ç—å {count} –∑–∞–ø–∏—Å–µ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            result = conn.execute(text("SELECT COUNT(*) FROM patient;"))
            final_count = result.fetchone()[0]
            
            print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"  - –í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {final_count}")
            
            conn.commit()
            print("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Railway —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            return True
            
    except SQLAlchemyError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Railway...")
    
    if fix_railway_database():
        print("\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ò–°–ü–†–ê–í–õ–ï–ù–ê! –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
