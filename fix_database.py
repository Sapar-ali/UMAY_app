#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ user
"""

import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import SQLAlchemyError

def fix_database_schema():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π"""
    
    # –ü–æ–ª—É—á–∞–µ–º DATABASE_URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    database_url = os.getenv('DATABASE_URL')
    
    if not database_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(database_url)
        
        with engine.connect() as conn:
            print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã user
            result = conn.execute(text("""
                SELECT column_name, data_type, character_maximum_length 
                FROM information_schema.columns 
                WHERE table_name = 'user'
                ORDER BY ordinal_position;
            """))
            
            columns = result.fetchall()
            print("üìä –¢–µ–∫—É—â–∞—è —Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã user:")
            for col in columns:
                print(f"  - {col[0]}: {col[1]}{f'({col[2]})' if col[2] else ''}")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª–µ–π
            print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ–ª–µ–π...")
            
            # 1. –ò–∑–º–µ–Ω—è–µ–º user_type —Å character(1) –Ω–∞ varchar(10)
            try:
                conn.execute(text("ALTER TABLE \"user\" ALTER COLUMN user_type TYPE varchar(10);"))
                print("‚úÖ user_type –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ varchar(10)")
            except Exception as e:
                print(f"‚ö†Ô∏è  user_type —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # 2. –ò–∑–º–µ–Ω—è–µ–º position —Å varchar(50) –Ω–∞ varchar(100)
            try:
                conn.execute(text("ALTER TABLE \"user\" ALTER COLUMN position TYPE varchar(100);"))
                print("‚úÖ position –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ varchar(100)")
            except Exception as e:
                print(f"‚ö†Ô∏è  position —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # 3. –ò–∑–º–µ–Ω—è–µ–º city —Å varchar(50) –Ω–∞ varchar(100)
            try:
                conn.execute(text("ALTER TABLE \"user\" ALTER COLUMN city TYPE varchar(100);"))
                print("‚úÖ city –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ varchar(100)")
            except Exception as e:
                print(f"‚ö†Ô∏è  city —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # 4. –ò–∑–º–µ–Ω—è–µ–º medical_institution —Å varchar(100) –Ω–∞ varchar(200)
            try:
                conn.execute(text("ALTER TABLE \"user\" ALTER COLUMN medical_institution TYPE varchar(200);"))
                print("‚úÖ medical_institution –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ varchar(200)")
            except Exception as e:
                print(f"‚ö†Ô∏è  medical_institution —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # 5. –ò–∑–º–µ–Ω—è–µ–º department —Å varchar(100) –Ω–∞ varchar(200)
            try:
                conn.execute(text("ALTER TABLE \"user\" ALTER COLUMN department TYPE varchar(200);"))
                print("‚úÖ department –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ varchar(200)")
            except Exception as e:
                print(f"‚ö†Ô∏è  department —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ö–µ–º—É
            result = conn.execute(text("""
                SELECT column_name, data_type, character_maximum_length 
                FROM information_schema.columns 
                WHERE table_name = 'user'
                ORDER BY ordinal_position;
            """))
            
            columns = result.fetchall()
            print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã user:")
            for col in columns:
                print(f"  - {col[0]}: {col[1]}{f'({col[2]})' if col[2] else ''}")
            
            conn.commit()
            print("\n‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            return True
            
    except SQLAlchemyError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_registration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ö–µ–º–æ–π"""
    try:
        from app import app, db, User
        from werkzeug.security import generate_password_hash
        
        with app.app_context():
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = User(
                full_name='Test User',
                login='testuser',
                password=generate_password_hash('password123'),
                user_type='user',
                position='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                city='–ù–µ —É–∫–∞–∑–∞–Ω',
                medical_institution='–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                department='–ù–µ —É–∫–∞–∑–∞–Ω–æ'
            )
            
            db.session.add(test_user)
            db.session.commit()
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.session.delete(test_user)
            db.session.commit()
            
            print("‚úÖ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
            return True
            
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    if fix_database_schema():
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
        if test_registration():
            print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–û! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("\n‚ö†Ô∏è  –°—Ö–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
