from flask import Flask, render_template, request, redirect, url_for, flash, session, jsonify, send_file
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from datetime import datetime, timedelta
import pandas as pd
import io
import os
import sys
import markdown
import requests
from bs4 import BeautifulSoup
import random
from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib import colors
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from functools import wraps
try:
    import phonenumbers
    PHONENUMBERS_AVAILABLE = True
except ImportError:
    PHONENUMBERS_AVAILABLE = False
    print("‚ö†Ô∏è  phonenumbers –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é")

# Load environment variables from .env file
try:
    from dotenv import load_dotenv
    load_dotenv()
    print("‚úÖ Environment variables loaded from .env file")
except ImportError:
    print("‚ö†Ô∏è  python-dotenv not installed, using system environment variables")
except Exception as e:
    print(f"‚ö†Ô∏è  Error loading .env file: {e}")

# ============================================================================
# UMAY APP - –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø –î–õ–Ø RENDER –ò RAILWAY
# –í–µ—Ä—Å–∏—è: 5.1 - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Render –∏ Railway
# –û–ë–ù–û–í–õ–ï–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ 500 - CSS –∫–ª–∞—Å—Å—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
# ============================================================================

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

logger.info("=== UMAY APP STARTING - SIMPLE VERSION v5.0 ===")

# Database configuration
def get_database_uri():
    """Get database URI - use single database with different tables"""
    if os.getenv('DATABASE_URL'):
        # Production - use PostgreSQL with single database
        return os.getenv('DATABASE_URL')
    else:
        # Local development - use SQLite file
        data_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'data')
        os.makedirs(data_dir, exist_ok=True)
        return f'sqlite:///{os.path.join(data_dir, "umay.db")}'

# Create single database instance
def create_app_database():
    """Create database instance"""
    app = Flask(__name__)
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'your-secret-key-here')
    app.config['SQLALCHEMY_DATABASE_URI'] = get_database_uri()
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    
    db = SQLAlchemy(app)
    return app, db

# Initialize single database
app, db = create_app_database()

# Initialize login manager
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'

# Initialize Flask-Mail (configure after app.config is populated)
from flask_mail import Mail
mail = Mail()

# ======================
# Email Configuration
# ======================
MAIL_SERVER = os.getenv('MAIL_SERVER', 'smtp.gmail.com')
MAIL_PORT = int(os.getenv('MAIL_PORT', '587'))
MAIL_USE_TLS = os.getenv('MAIL_USE_TLS', 'true').lower() == 'true'
MAIL_USE_SSL = os.getenv('MAIL_USE_SSL', 'false').lower() == 'true'
MAIL_USERNAME = os.getenv('MAIL_USERNAME', 'umay.med.gov@gmail.com')
MAIL_PASSWORD = os.getenv('MAIL_PASSWORD', '87019090077Umay')
MAIL_DEFAULT_SENDER = os.getenv('MAIL_DEFAULT_SENDER', 'umay.med.gov@gmail.com')
MAIL_MAX_EMAILS = int(os.getenv('MAIL_MAX_EMAILS', '100'))
MAIL_ASCII_ATTACHMENTS = False
MAIL_SUPPRESS_SEND = os.getenv('MAIL_SUPPRESS_SEND', 'false').lower() == 'true'

# Apply mail configuration to Flask app and initialize extension
app.config.update({
    'MAIL_SERVER': MAIL_SERVER,
    'MAIL_PORT': MAIL_PORT,
    'MAIL_USE_TLS': MAIL_USE_TLS,
    'MAIL_USE_SSL': MAIL_USE_SSL,
    'MAIL_USERNAME': MAIL_USERNAME,
    'MAIL_PASSWORD': MAIL_PASSWORD,
    'MAIL_DEFAULT_SENDER': MAIL_DEFAULT_SENDER,
    'MAIL_MAX_EMAILS': MAIL_MAX_EMAILS,
    'MAIL_ASCII_ATTACHMENTS': MAIL_ASCII_ATTACHMENTS,
    'MAIL_SUPPRESS_SEND': MAIL_SUPPRESS_SEND
})
mail.init_app(app)

# Email verification settings
EMAIL_VERIFICATION_TTL_HOURS = int(os.getenv('EMAIL_VERIFICATION_TTL_HOURS', '24'))

# Email verification functions
def generate_email_token():
    """Generate secure token for email verification"""
    from itsdangerous import URLSafeTimedSerializer
    serializer = URLSafeTimedSerializer(app.config['SECRET_KEY'])
    return serializer.dumps('email_verification', salt='email-verification')

def verify_email_token(token, expiration=EMAIL_VERIFICATION_TTL_HOURS * 3600):
    """Verify email verification token"""
    from itsdangerous import URLSafeTimedSerializer, SignatureExpired, BadSignature
    serializer = URLSafeTimedSerializer(app.config['SECRET_KEY'])
    try:
        data = serializer.loads(token, salt='email-verification', max_age=expiration)
        return True, data
    except SignatureExpired:
        return False, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å—Å—ã–ª–∫–∏ –∏—Å—Ç–µ–∫"
    except BadSignature:
        return False, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"

def send_verification_email(email, token, user_type, app_type, purpose='register'):
    """Send email verification email"""
    try:
        if purpose == 'reset':
            verification_url = url_for('reset_password', token=token, _external=True)
            subject = "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - UMAY"
            header_text = "üîê –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"
            content_text = f"–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ UMAY {app_type.upper()} –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
            button_text = "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å"
            footer_text = "–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ."
            ttl_text = "–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞."
        else:
            verification_url = url_for('verify_email', token=token, _external=True)
            subject = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email - UMAY"
            header_text = "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UMAY!"
            content_text = f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ UMAY {app_type.upper()}! –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
            button_text = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å Email"
            footer_text = "–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ UMAY, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ."
            ttl_text = f"–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ {EMAIL_VERIFICATION_TTL_HOURS} —á–∞—Å–æ–≤."
        
        html_body = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{subject}</title>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }}
                .content {{ background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }}
                .button {{ display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; margin: 20px 0; }}
                .footer {{ text-align: center; margin-top: 30px; color: #666; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>{header_text}</h1>
                    <p>{'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' if purpose == 'register' else '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É'}</p>
                </div>
                <div class="content">
                    <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</h2>
                    <p>{content_text}</p>
                    
                    <div style="text-align: center;">
                        <a href="{verification_url}" class="button">{button_text}</a>
                    </div>
                    
                    <p><strong>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</strong></p>
                    <p style="word-break: break-all; background: #f0f0f0; padding: 10px; border-radius: 5px;">
                        {verification_url}
                    </p>
                    
                    <p><em>{ttl_text}</em></p>
                </div>
                <div class="footer">
                    <p>¬© 2024 UMAY. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
                    <p>{footer_text}</p>
                </div>
            </div>
        </body>
        </html>
        """
        
        from flask_mail import Message
        msg = Message(subject, recipients=[email])
        msg.html = html_body
        
        mail.send(msg)
        return True, "Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    except Exception as e:
        logger.error(f"Error sending verification email: {e}")
        return False, f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {str(e)}"

# Markdown filter for templates
@app.template_filter('markdown')
def markdown_filter(text):
    """Convert markdown text to HTML"""
    if not text:
        return ""
    return markdown.markdown(text, extensions=['extra', 'codehilite'])

# Mobile device detection
def is_mobile_device():
    """Detect if user is on mobile device"""
    user_agent = request.headers.get('User-Agent', '').lower()
    mobile_keywords = ['mobile', 'android', 'iphone', 'ipad', 'windows phone']
    return any(keyword in user_agent for keyword in mobile_keywords)

# iOS detection for Safari-specific fallbacks
def is_ios_device():
    user_agent = request.headers.get('User-Agent', '').lower()
    return any(keyword in user_agent for keyword in ['iphone', 'ipad', 'ipod'])

# PWA routes
@app.route('/mobile/')
@app.route('/mobile/index')
def mobile_index():
    """Mobile home page"""
    logger.info("üì± Mobile index page requested")
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é –∫—Ä–∞—Å–∏–≤—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        return redirect(url_for('index'))
    except Exception as e:
        logger.error(f"‚ùå Error rendering mobile simple: {e}")
        try:
            # Fallback: –ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞ –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π)
            return render_template('mobile/simple.html')
        except Exception as e2:
            logger.error(f"‚ùå Error rendering mobile index fallback: {e2}")
            return f"Mobile Error: {e2}", 500

@app.route('/mobile/login')
def mobile_login():
    """Mobile login page"""
    logger.info("üì± Mobile login page requested")
    try:
        # Use the primary login page to avoid missing mobile-specific template
        return redirect(url_for('login'))
    except Exception as e:
        logger.error(f"‚ùå Error rendering mobile login: {e}")
        return f"Error: {e}", 500

@app.route('/mobile/register')
def mobile_register():
    """Mobile register page"""
    logger.info("üì± Mobile register page requested")
    try:
        return render_template('mobile/register.html')
    except Exception as e:
        logger.error(f"‚ùå Error rendering mobile register: {e}")
        return f"Error: {e}", 500

@app.route('/verify-email/<token>')
def verify_email(token):
    """Verify email address"""
    logger.info(f"Email verification requested with token: {token[:10]}...")
    
    ok, data = verify_email_token(token)
    if not ok:
        flash(data, 'error')
        return redirect(url_for('login'))
    
    # Find user by token
    user = None
    verification_record = db.session.query(EmailVerification).filter_by(token=token).first()
    
    if verification_record:
        # Mark verification as completed
        verification_record.verified = True
        
        # Find and update user
        if verification_record.purpose == 'register':
            user = db.session.query(UserPro).filter_by(email_verification_token=token).first()
            if not user:
                user = db.session.query(UserMama).filter_by(email_verification_token=token).first()
            
            if user:
                user.is_email_verified = True
                user.email_verification_token = None
                user.email_verification_expires = None
                db.session.commit()
                
                flash('Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.', 'success')
                return redirect(url_for('login'))
    
    flash('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞.', 'error')
    return redirect(url_for('register'))

@app.route('/resend-verification', methods=['POST'])
def resend_verification():
    """Resend email verification link to user"""
    try:
        email = request.form.get('email', '').strip().lower()
        app_type = request.form.get('app_type', '').strip()

        if not email:
            flash('–£–∫–∞–∂–∏—Ç–µ email –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞.', 'error')
            return redirect(url_for('login'))

        # Find user by email in both tables
        user = db.session.query(UserPro).filter_by(email=email).first()
        if not user:
            user = db.session.query(UserMama).filter_by(email=email).first()

        if not user:
            flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω.', 'error')
            return redirect(url_for('login'))

        if getattr(user, 'is_email_verified', False):
            flash('Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.', 'success')
            return redirect(url_for('login'))

        # Throttle repeat sends (min interval 60 seconds)
        last = (
            db.session.query(EmailVerification)
            .filter_by(email=email, purpose='register')
            .order_by(EmailVerification.created_at.desc())
            .first()
        )
        if last:
            from datetime import datetime
            delta_sec = (datetime.utcnow() - last.created_at).total_seconds()
            if delta_sec < 60:
                remaining = 60 - int(delta_sec)
                flash(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {remaining} —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π.', 'error')
                return redirect(url_for('login'))

        # Generate new token and update user + create verification record
        token = generate_email_token()
        from datetime import datetime, timedelta
        expires = datetime.utcnow() + timedelta(hours=EMAIL_VERIFICATION_TTL_HOURS)
        user.email_verification_token = token
        user.email_verification_expires = expires

        verification = EmailVerification(
            email=email,
            token=token,
            purpose='register',
            expires_at=expires
        )
        db.session.add(verification)
        db.session.commit()

        ok, message = send_verification_email(email, token, user.user_type, user.app_type, purpose='register')
        if not ok:
            flash(message, 'error')
        else:
            flash('–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ.', 'success')
        return redirect(url_for('login'))
    except Exception as e:
        logger.exception(f"Resend verification error: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞.', 'error')
        return redirect(url_for('login'))

@app.route('/reset-password/<token>', methods=['GET', 'POST'])
def reset_password(token):
    """Reset password with token"""
    logger.info(f"Password reset requested with token: {token[:10]}...")
    
    ok, data = verify_email_token(token, expiration=3600)  # 1 hour for reset
    if not ok:
        flash(data, 'error')
        return redirect(url_for('login'))
    
    if request.method == 'POST':
        new_password = request.form.get('new_password', '')
        confirm_password = request.form.get('confirm_password', '')
        
        if len(new_password) < 6:
            flash('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!', 'error')
            return render_template('reset_password.html')
        
        if new_password != confirm_password:
            flash('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', 'error')
            return render_template('reset_password.html')
        
        # Find verification record
        verification_record = db.session.query(EmailVerification).filter_by(token=token).first()
        if verification_record and verification_record.purpose == 'reset':
            # Find user by email
            user = db.session.query(UserPro).filter_by(email=verification_record.email).first()
            if not user:
                user = db.session.query(UserMama).filter_by(email=verification_record.email).first()
            
            if user:
                # Update password
                user.password = generate_password_hash(new_password)
                
                # Mark verification as completed and delete
                db.session.delete(verification_record)
                db.session.commit()
                
                flash('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.', 'success')
                return redirect(url_for('login'))
        
        flash('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', 'error')
        return redirect(url_for('recover'))
    
    return render_template('reset_password.html')

@app.route('/mobile/dashboard')
def mobile_dashboard():
    """Mobile dashboard page"""
    logger.info("üì± Mobile dashboard page requested")
    if not current_user.is_authenticated:
        return redirect(url_for('login'))
    try:
        return render_template('mobile/dashboard.html')
    except Exception as e:
        logger.error(f"‚ùå Error rendering mobile dashboard: {e}")
        return f"Error: {e}", 500

@app.route('/mobile/test')
def mobile_test():
    """Mobile test page"""
    logger.info("üì± Mobile test page requested")
    return render_template('mobile/test.html')

@app.route('/mobile/simple')
def mobile_simple():
    """Simple mobile page for testing"""
    logger.info("üì± Simple mobile page requested")
    return render_template('mobile/simple.html')

@app.route('/mobile/debug')
def mobile_debug():
    """Debug mobile routes"""
    logger.info("üì± Mobile debug page requested")
    import os
    template_dir = os.path.join(os.path.dirname(__file__), 'templates', 'mobile')
    templates = []
    if os.path.exists(template_dir):
        templates = [f for f in os.listdir(template_dir) if f.endswith('.html')]
    
    debug_info = f"""
    <html>
    <head><title>UMAY Mobile Debug</title></head>
    <body style="font-family: monospace; padding: 20px;">
        <h1>UMAY Mobile Debug Info</h1>
        <h2>Available Templates:</h2>
        <ul>
            {''.join(f'<li>{t}</li>' for t in templates)}
        </ul>
        <h2>Current Routes:</h2>
        <ul>
            <li><a href="/mobile/">/mobile/</a></li>
            <li><a href="/mobile/index">/mobile/index</a></li>
            <li><a href="/mobile/simple">/mobile/simple</a></li>
            <li><a href="/mobile/test">/mobile/test</a></li>
            <li><a href="/mobile/hello">/mobile/hello</a></li>
            <li><a href="/mobile/login">/mobile/login</a></li>
            <li><a href="/mobile/register">/mobile/register</a></li>
            <li><a href="/mobile/status">/mobile/status</a></li>
            <li><a href="/mobile/resources">/mobile/resources</a></li>
            <li><a href="/mobile/debug">/mobile/debug</a></li>
        </ul>
        <h2>Server Info:</h2>
        <p>Python: {os.sys.version}</p>
        <p>Flask: {app.config.get('ENV', 'unknown')}</p>
        <p>Debug: {app.debug}</p>
    </body>
    </html>
    """
    return debug_info

@app.route('/mobile/status')
def mobile_status():
    """Simple mobile status check"""
    logger.info("üì± Mobile status check requested")
    return "UMAY Mobile is working! ‚úÖ"

@app.route('/mobile/resources')
def mobile_resources():
    """Check mobile resources"""
    logger.info("üì± Mobile resources check requested")
    import os
    
    # Check if static files exist
    static_dir = os.path.join(os.path.dirname(__file__), 'static')
    css_exists = os.path.exists(os.path.join(static_dir, 'css', 'mobile.css'))
    js_exists = os.path.exists(os.path.join(static_dir, 'js', 'mobile.js'))
    sw_exists = os.path.exists(os.path.join(static_dir, 'js', 'sw.js'))
    manifest_exists = os.path.exists(os.path.join(static_dir, 'manifest.json'))
    
    return f"""
    <html>
    <head><title>UMAY Mobile Resources</title></head>
    <body style="font-family: monospace; padding: 20px;">
        <h1>UMAY Mobile Resources Status</h1>
        <h2>Static Files:</h2>
        <ul>
            <li>CSS: {'‚úÖ' if css_exists else '‚ùå'} mobile.css</li>
            <li>JS: {'‚úÖ' if js_exists else '‚ùå'} mobile.js</li>
            <li>SW: {'‚úÖ' if sw_exists else '‚ùå'} sw.js</li>
            <li>Manifest: {'‚úÖ' if manifest_exists else '‚ùå'} manifest.json</li>
        </ul>
        <h2>Test Links:</h2>
        <ul>
            <li><a href="/static/css/mobile.css">CSS File</a></li>
            <li><a href="/static/js/mobile.js">JS File</a></li>
            <li><a href="/static/js/sw.js">Service Worker</a></li>
            <li><a href="/static/manifest.json">Manifest</a></li>
        </ul>
        <p><a href="/mobile/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—É—é –≥–ª–∞–≤–Ω—É—é</a></p>
    </body>
    </html>
    """

@app.route('/mobile/hello')
def mobile_hello():
    """Simple hello world for mobile"""
    logger.info("üì± Mobile hello page requested")
    from datetime import datetime
    return """
    <html>
    <head><title>UMAY Mobile Hello</title></head>
    <body style="font-family: Arial, sans-serif; padding: 20px; text-align: center;">
        <h1>üëã Hello from UMAY Mobile!</h1>
        <p>–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∑–Ω–∞—á–∏—Ç Flask —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
        <p>–í—Ä–µ–º—è: """ + str(datetime.utcnow()) + """</p>
        <p><a href="/mobile/">‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
    </body>
    </html>
    """

@app.route('/mobile/<path:subpath>')
def mobile_routes(subpath):
    """Catch-all mobile routes"""
    logger.info(f"üì± Mobile catch-all route requested: /mobile/{subpath}")
    try:
        # Try to render a simple fallback page
        return f"""
        <html>
        <head><title>UMAY Mobile - {subpath}</title></head>
        <body style="font-family: Arial, sans-serif; padding: 20px; text-align: center;">
            <h1>UMAY Mobile</h1>
            <p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ <strong>{subpath}</strong> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
            <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</p>
            <ul style="list-style: none; padding: 0;">
                <li><a href="/mobile/">–ì–ª–∞–≤–Ω–∞—è</a></li>
                <li><a href="/mobile/simple">–ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è</a></li>
                <li><a href="/mobile/test">–¢–µ—Å—Ç</a></li>
                <li><a href="/mobile/hello">Hello</a></li>
                <li><a href="/mobile/status">–°—Ç–∞—Ç—É—Å</a></li>
                <li><a href="/mobile/resources">–†–µ—Å—É—Ä—Å—ã</a></li>
                <li><a href="/mobile/debug">–û—Ç–ª–∞–¥–∫–∞</a></li>
            </ul>
            <p><a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
        </body>
        </html>
        """
    except Exception as e:
        logger.error(f"‚ùå Error in mobile catch-all: {e}")
        return f"Mobile Error: {e}", 500

@app.route('/manifest.json')
def manifest():
    """Serve PWA manifest"""
    return send_file('static/manifest.json', mimetype='application/json')

@app.route('/sw.js')
def service_worker():
    """Serve Service Worker"""
    return send_file('static/js/sw.js', mimetype='application/javascript')

# ======================
# OTP helpers
# ======================
# Email verification helpers
# ======================
# (Functions moved to email verification section above)
    phone = ''.join(c for c in (raw_phone or '') if c.isdigit() or c == '+')
    
    if PHONENUMBERS_AVAILABLE:
        try:
            if ONLY_KZ_NUMBERS:
                if phone.startswith('8'):
                    phone = '+7' + phone[1:]
                parsed = phonenumbers.parse(phone, 'KZ')
            else:
                parsed = phonenumbers.parse(phone, None)
            if not phonenumbers.is_possible_number(parsed) or not phonenumbers.is_valid_number(parsed):
                return ''
            e164 = phonenumbers.format_number(parsed, phonenumbers.PhoneNumberFormat.E164)
            if ONLY_KZ_NUMBERS and not e164.startswith('+7'):
                return ''
            return e164
        except Exception:
            return ''
    else:
        # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –±–µ–∑ phonenumbers
        if phone.startswith('8'):
            phone = '+7' + phone[1:]
        elif phone.startswith('7'):
            phone = '+7' + phone[1:]
        elif not phone.startswith('+'):
            phone = '+7' + phone
        return phone if len(phone) >= 10 else ''

def can_resend_otp(last_sent_at: datetime) -> bool:
    if not last_sent_at:
        return True
    return (datetime.utcnow() - last_sent_at).total_seconds() >= OTP_RESEND_COOLDOWN_SEC

def count_otp_sent_today(phone: str, purpose: str) -> int:
    start_of_day = datetime.utcnow().replace(hour=0, minute=0, second=0, microsecond=0)
    return OTPCode.query.filter(
        OTPCode.phone == phone,
        OTPCode.purpose == purpose,
        OTPCode.created_at >= start_of_day
    ).count()

def generate_otp_code() -> str:
    return f"{random.randint(100000, 999999)}"

def send_sms_infobip(phone: str, text: str) -> bool:
    if not SMS_BASE_URL or not SMS_API_KEY:
        logger.error('SMS config is missing')
        return False
    try:
        url = SMS_BASE_URL.rstrip('/') + '/sms/2/text/advanced'
        headers = {
            'Authorization': f'App {SMS_API_KEY}',
            'Content-Type': 'application/json'
        }
        message_obj = {
            'destinations': [{'to': phone}],
            'text': text
        }
        # –í—Ä–µ–º–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ Infobip
        # if SMS_SENDER:
        #     message_obj['from'] = SMS_SENDER
        payload = {'messages': [message_obj]}
        resp = requests.post(url, json=payload, headers=headers, timeout=10)
        if resp.status_code in (200, 201):
            return True
        logger.error(f"Infobip send failed: {resp.status_code} {resp.text}")
        return False
    except Exception as e:
        logger.error(f"Infobip send exception: {e}")
        return False

def send_sms_mobizon(phone: str, text: str) -> bool:
    if not SMS_BASE_URL or not SMS_API_KEY:
        logger.error('SMS config is missing')
        return False
    
    logger.info(f"üîß –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É SMS —á–µ—Ä–µ–∑ Mobizon")
    logger.info(f"üîß SMS_PROVIDER: {SMS_PROVIDER}")
    logger.info(f"üîß SMS_BASE_URL: {SMS_BASE_URL}")
    logger.info(f"üîß SMS_API_KEY: {'*' * 10 if SMS_API_KEY else '–ù–ï_–£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    
    try:
        # Mobizon API: https://api.mobizon.kz/service/message/sendSmsMessage
        url = SMS_BASE_URL.rstrip('/') + '/service/message/sendSmsMessage'
        logger.info(f"üîß –û—Ç–ø—Ä–∞–≤–∫–∞ SMS —á–µ—Ä–µ–∑ Mobizon: {url}")
        
        data = {
            'apiKey': SMS_API_KEY,
            'recipient': phone,
            'text': text
        }
        # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º from, –ø–æ–∫–∞ –ø–æ–¥–ø–∏—Å—å –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞
        # if SMS_SENDER:
        #     data['from'] = SMS_SENDER
        
        logger.info(f"üì± –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: recipient={phone}, from=–ù–ï_–£–ö–ê–ó–ê–ù (–ø–æ–¥–ø–∏—Å—å –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞), text_length={len(text)}")
        logger.info(f"üì± –ü–æ–ª–Ω—ã–π URL: {url}")
        logger.info(f"üì± –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {data}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded',
            'User-Agent': 'UMAY-App/1.0'
        }
        
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å...")
        resp = requests.post(url, data=data, headers=headers, timeout=30)
        logger.info(f"üì° Mobizon –æ—Ç–≤–µ—Ç: —Å—Ç–∞—Ç—É—Å={resp.status_code}, —Ä–∞–∑–º–µ—Ä={len(resp.text)}")
        logger.info(f"üì° –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(resp.headers)}")
        
        if resp.status_code in (200, 201):
            # Typical Mobizon success payload contains code == 0 and data.messageId
            try:
                payload = resp.json()
                logger.info(f"üìã Mobizon JSON –æ—Ç–≤–µ—Ç: {payload}")
                
                code_val = str(payload.get('code', '')).lower()
                message_val = str(payload.get('message', '')).lower()
                has_id = isinstance(payload.get('data', {}), dict) and (
                    'messageId' in payload.get('data', {}) or 'messages' in payload.get('data', {})
                )
                
                if code_val in ('0', 'success') or message_val in ('ok', 'success') or has_id:
                    logger.info("‚úÖ Mobizon SMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    return True
                else:
                    logger.error(f"‚ùå Mobizon –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: code={code_val}, message={message_val}")
                    logger.error(f"‚ùå –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {payload}")
                    return False
                    
            except Exception as json_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞ Mobizon: {json_error}")
                # If response is not JSON but HTTP 200, consider failure with details
                logger.error(f"üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç: {resp.text[:500]}")
                return False
        else:
            logger.error(f"‚ùå Mobizon HTTP –æ—à–∏–±–∫–∞: {resp.status_code}")
            logger.error(f"‚ùå –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {resp.text[:500]}")
            return False
    except requests.exceptions.Timeout:
        logger.error("‚è∞ Mobizon timeout - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –∑–∞ 30 —Å–µ–∫—É–Ω–¥")
        return False
    except requests.exceptions.ConnectionError as e:
        logger.error(f"üîå Mobizon connection error: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå Mobizon –æ–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"‚ùå Stack trace: {traceback.format_exc()}")
        return False

def send_sms(phone: str, text: str) -> bool:
    provider = (SMS_PROVIDER or 'infobip').lower()
    logger.info(f"üì± –û—Ç–ø—Ä–∞–≤–∫–∞ SMS —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {provider}")
    
    if provider == 'mobizon':
        logger.info("üì± –ü—Ä–æ–±—É–µ–º Mobizon...")
        result = send_sms_mobizon(phone, text)
        if result:
            return True
        else:
            logger.warning("‚ö†Ô∏è Mobizon –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º Infobip –∫–∞–∫ fallback...")
            return send_sms_infobip(phone, text)
    
    # default to infobip for backward compatibility
    logger.info("üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º Infobip...")
    return send_sms_infobip(phone, text)

def send_otp(phone: str, purpose: str):
    try:
        normalized = normalize_phone(phone)
        if not normalized:
            return False, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        
        sent_today = count_otp_sent_today(normalized, purpose)
        if sent_today >= OTP_MAX_PER_DAY:
            return False, '–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–æ–≤'
        
        last = OTPCode.query.filter_by(phone=normalized, purpose=purpose).order_by(OTPCode.created_at.desc()).first()
        if last and not can_resend_otp(last.last_sent_at):
            return False, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π'
        
        code = generate_otp_code()
        text = f"UMAY: –≤–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è {code}. –ù–∏–∫–æ–º—É –µ–≥–æ –Ω–µ —Å–æ–æ–±—â–∞–π—Ç–µ."
        
        logger.info(f"üì± –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ OTP: phone={normalized}, purpose={purpose}, provider={SMS_PROVIDER}")
        
        sent = send_sms(normalized, text)
        if not sent:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS –¥–ª—è {normalized}")
            return False, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –°–ú–°. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
        
        logger.info(f"‚úÖ SMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è {normalized}")
        
        otp = OTPCode(phone=normalized, code=code, purpose=purpose,
                      expires_at=datetime.utcnow() + timedelta(seconds=OTP_TTL_SEC),
                      last_sent_at=datetime.utcnow())
        db.session.add(otp)
        db.session.commit()
        return True, '–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ send_otp: {e}")
        return False, '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'

def verify_otp(phone: str, code: str, purpose: str):
    normalized = normalize_phone(phone)
    if not normalized:
        return False, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    otp = OTPCode.query.filter_by(phone=normalized, purpose=purpose, verified=False).order_by(OTPCode.created_at.desc()).first()
    if not otp:
        return False, '–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π'
    if datetime.utcnow() > otp.expires_at:
        return False, '–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–¥–∞ –∏—Å—Ç–µ–∫'
    if otp.attempts >= OTP_MAX_ATTEMPTS:
        return False, '–ü—Ä–µ–≤—ã—à–µ–Ω–æ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥'
    if otp.code != (code or '').strip():
        otp.attempts += 1
        db.session.commit()
        return False, '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥'
    otp.verified = True
    db.session.commit()
    return True, normalized

# –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–∞
def pro_required(f):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º UMAY Pro"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if not current_user.is_authenticated:
            return redirect(url_for('login'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ UMAY Pro
        if hasattr(current_user, 'app_type') and current_user.app_type != 'pro':
            flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ UMAY Pro.', 'error')
            return redirect(url_for('index'))
        
        return f(*args, **kwargs)
    return decorated_function

def mama_required(f):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º UMAY Mama"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if not current_user.is_authenticated:
            return redirect(url_for('login'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ UMAY Mama
        if hasattr(current_user, 'app_type') and current_user.app_type != 'mama':
            flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π UMAY Mama.', 'error')
            return redirect(url_for('index'))
        
        return f(*args, **kwargs)
    return decorated_function

def pro_clinical_required(f):
    """–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É UMAY Pro (–Ω–µ —É–ø—Ä–∞–≤–ª–µ–Ω—Ü–∞–º)."""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if not current_user.is_authenticated:
            return redirect(url_for('login'))
        # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å UMAY Pro
        if hasattr(current_user, 'app_type') and current_user.app_type != 'pro':
            flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ UMAY Pro.', 'error')
            return redirect(url_for('index'))
        # –ó–∞–ø—Ä–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω—Ü–µ–≤ (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ Joker)
        if getattr(current_user, 'user_type', '') == 'manager' and getattr(current_user, 'login', '') != 'Joker':
            flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É.', 'error')
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def admin_required(f):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if not current_user.is_authenticated:
            return redirect(url_for('login'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ Joker
        if hasattr(current_user, 'user_type') and current_user.user_type != 'admin' and current_user.login != 'Joker':
            flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.', 'error')
            return redirect(url_for('index'))
        
        return f(*args, **kwargs)
    return decorated_function

# Initialize database tables
def init_database():
    """Initialize database with all tables"""
    try:
        with app.app_context():
            db.create_all()
            logger.info("‚úÖ UMAY database initialized")
            # Ensure email columns exist (best-effort)
            try:
                from sqlalchemy import inspect, text
                inspector = inspect(db.engine)
                def add_column_if_missing(table_name: str, column_ddl: str):
                    columns = [col['name'] for col in inspector.get_columns(table_name)]
                    col_name = column_ddl.split()[0]
                    if col_name not in columns:
                        with db.engine.connect() as conn:
                            conn.execute(text(f"ALTER TABLE {table_name} ADD COLUMN {column_ddl}"))
                            conn.commit()
                            logger.info(f"Added column {col_name} to {table_name}")
                if 'sqlite' in db.engine.url.drivername:
                    add_column_if_missing('user_pro', 'email VARCHAR(120)')
                    add_column_if_missing('user_pro', 'is_email_verified BOOLEAN DEFAULT 0')
                    add_column_if_missing('user_pro', 'email_verification_token VARCHAR(100)')
                    add_column_if_missing('user_pro', 'email_verification_expires DATETIME')
                    add_column_if_missing('user_mama', 'email VARCHAR(120)')
                    add_column_if_missing('user_mama', 'is_email_verified BOOLEAN DEFAULT 0')
                    add_column_if_missing('user_mama', 'email_verification_token VARCHAR(100)')
                    add_column_if_missing('user_mama', 'email_verification_expires DATETIME')
                else:
                    add_column_if_missing('user_pro', 'email VARCHAR(120)')
                    add_column_if_missing('user_pro', 'is_email_verified BOOLEAN DEFAULT FALSE')
                    add_column_if_missing('user_pro', 'email_verification_token VARCHAR(100)')
                    add_column_if_missing('user_pro', 'email_verification_expires TIMESTAMP')
                    add_column_if_missing('user_mama', 'email VARCHAR(120)')
                    add_column_if_missing('user_mama', 'is_email_verified BOOLEAN DEFAULT FALSE')
                    add_column_if_missing('user_mama', 'email_verification_token VARCHAR(100)')
                    add_column_if_missing('user_mama', 'email_verification_expires TIMESTAMP')
            except Exception as e:
                logger.warning(f"Could not ensure email columns: {e}")
            
            # Create admin user if not exists
            admin_user = db.session.query(UserPro).filter_by(login='Joker').first()
            if not admin_user:
                hashed_password = generate_password_hash('19341934')
                admin_user = UserPro(
                    full_name='Super Admin',
                    login='Joker',
                    password=hashed_password,
                    user_type='admin',
                    position='Super Admin',
                    city='–®—ã–º–∫–µ–Ω—Ç',
                    medical_institution='UMAY System',
                    department='Administration',
                    app_type='pro',
                    email='admin@umay.kz',
                    is_email_verified=True
                )
                db.session.add(admin_user)
                db.session.commit()
                logger.info("‚úÖ Admin user created")
            
            # Add test patients if table is empty
            patient_count = db.session.query(Patient).count()
            if patient_count == 0:
                logger.info("üìä Adding test patients...")
                
                test_patients = [
                    Patient(
                        date='2024-01-15',
                        patient_name='–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
                        age=28,
                        pregnancy_weeks=39,
                        weight_before=65.5,
                        weight_after=70.2,
                        complications='–ù–µ—Ç',
                        notes='–ù–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ä–æ–¥—ã',
                        midwife='–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤–∞',
                        birth_date='2024-01-15',
                        birth_time='14:30',
                        child_gender='–î–µ–≤–æ—á–∫–∞',
                        child_weight=3200,
                        delivery_method='–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        anesthesia='–≠–ø–∏–¥—É—Ä–∞–ª—å–Ω–∞—è –∞–Ω–µ—Å—Ç–µ–∑–∏—è',
                        blood_loss=450,
                        labor_duration=8.5,
                        other_diseases='–ù–µ—Ç',
                        gestosis='–ù–µ—Ç',
                        diabetes='–ù–µ—Ç',
                        hypertension='–ù–µ—Ç',
                        anemia='–ù–µ—Ç',
                        infections='–ù–µ—Ç',
                        placenta_pathology='–ù–µ—Ç',
                        polyhydramnios='–ù–µ—Ç',
                        oligohydramnios='–ù–µ—Ç',
                        pls='–ù–µ—Ç',
                        pts='–ù–µ—Ç',
                        eclampsia='–ù–µ—Ç',
                        gestational_hypertension='–ù–µ—Ç',
                        placenta_previa='–ù–µ—Ç',
                        shoulder_dystocia='–ù–µ—Ç',
                        third_degree_tear='–ù–µ—Ç',
                        cord_prolapse='–ù–µ—Ç',
                        postpartum_hemorrhage='–ù–µ—Ç',
                        placental_abruption='–ù–µ—Ç'
                    ),
                    Patient(
                        date='2024-02-20',
                        patient_name='–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
                        age=32,
                        pregnancy_weeks=38,
                        weight_before=68.0,
                        weight_after=72.5,
                        complications='–ì–µ—Å—Ç–æ–∑',
                        notes='–û—Å–ª–æ–∂–Ω–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        midwife='–î–æ–∫—Ç–æ—Ä –ö–æ–∑–ª–æ–≤–∞',
                        birth_date='2024-02-20',
                        birth_time='16:45',
                        child_gender='–ú–∞–ª—å—á–∏–∫',
                        child_weight=3500,
                        delivery_method='–ö–µ—Å–∞—Ä–µ–≤–æ —Å–µ—á–µ–Ω–∏–µ',
                        anesthesia='–û–±—â–∞—è –∞–Ω–µ—Å—Ç–µ–∑–∏—è',
                        blood_loss=800,
                        labor_duration=12.0,
                        other_diseases='–ù–µ—Ç',
                        gestosis='–î–∞',
                        diabetes='–ù–µ—Ç',
                        hypertension='–î–∞',
                        anemia='–ù–µ—Ç',
                        infections='–ù–µ—Ç',
                        placenta_pathology='–ù–µ—Ç',
                        polyhydramnios='–ù–µ—Ç',
                        oligohydramnios='–ù–µ—Ç',
                        pls='–î–∞',
                        pts='–ù–µ—Ç',
                        eclampsia='–ù–µ—Ç',
                        gestational_hypertension='–ù–µ—Ç',
                        placenta_previa='–ù–µ—Ç',
                        shoulder_dystocia='–ù–µ—Ç',
                        third_degree_tear='–ù–µ—Ç',
                        cord_prolapse='–ù–µ—Ç',
                        postpartum_hemorrhage='–ù–µ—Ç',
                        placental_abruption='–ù–µ—Ç'
                    ),
                    Patient(
                        date='2024-03-10',
                        patient_name='–ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
                        age=25,
                        pregnancy_weeks=40,
                        weight_before=62.0,
                        weight_after=66.8,
                        complications='–ü–†–ö',
                        notes='–ü–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–µ –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ',
                        midwife='–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤–∞',
                        birth_date='2024-03-10',
                        birth_time='09:15',
                        child_gender='–î–µ–≤–æ—á–∫–∞',
                        child_weight=3100,
                        delivery_method='–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã',
                        anesthesia='–ë–µ–∑ –∞–Ω–µ—Å—Ç–µ–∑–∏–∏',
                        blood_loss=1200,
                        labor_duration=6.5,
                        other_diseases='–ù–µ—Ç',
                        gestosis='–ù–µ—Ç',
                        diabetes='–ù–µ—Ç',
                        hypertension='–ù–µ—Ç',
                        anemia='–ù–µ—Ç',
                        infections='–ù–µ—Ç',
                        placenta_pathology='–ù–µ—Ç',
                        polyhydramnios='–ù–µ—Ç',
                        oligohydramnios='–ù–µ—Ç',
                        pls='–ù–µ—Ç',
                        pts='–ù–µ—Ç',
                        eclampsia='–ù–µ—Ç',
                        gestational_hypertension='–ù–µ—Ç',
                        placenta_previa='–ù–µ—Ç',
                        shoulder_dystocia='–ù–µ—Ç',
                        third_degree_tear='–ù–µ—Ç',
                        cord_prolapse='–ù–µ—Ç',
                        postpartum_hemorrhage='–î–∞',
                        placental_abruption='–ù–µ—Ç'
                    )
                ]
                
                for patient in test_patients:
                    db.session.add(patient)
                
                db.session.commit()
                logger.info(f"‚úÖ Added {len(test_patients)} test patients")
            else:
                logger.info(f"‚úÖ Database already has {patient_count} patients")
            
    except Exception as e:
        logger.error(f"‚ùå Error initializing database: {e}")

# Global error handlers
@app.errorhandler(500)
def internal_error(error):
    logger.exception(f"‚ùå 500 Internal Server Error: {error}")
    return render_template('error.html', error="–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"), 500

@app.errorhandler(404)
def not_found_error(error):
    logger.warning(f"‚ö†Ô∏è 404 Not Found: {request.url}")
    return render_template('error.html', error="–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"), 404

@app.errorhandler(Exception)
def handle_exception(e):
    logger.exception(f"‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    return render_template('error.html', error="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"), 500

# –î–∞–Ω–Ω—ã–µ –æ –≥–æ—Ä–æ–¥–∞—Ö –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏—è—Ö —Å –æ—Ç–¥–µ–ª–µ–Ω–∏—è–º–∏
CITIES_DATA = {
    "–®—ã–º–∫–µ–Ω—Ç": {
        "–ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–µ—Ä–∏–Ω–∞—Ç–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä": [
            "–†–æ–¥–∏–ª—å–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ü–∞—Ç–∞–ª–æ–≥–∏–∏",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –§–∏–∑–∏–æ–ª–æ–≥–∏–∏"
        ],
        "–ì–ö–ü –Ω–∞ –ü–•–í –ì–æ—Ä–æ–¥—Å–∫–æ–π —Ä–æ–¥–∏–ª—å–Ω—ã–π –¥–æ–º": [
            "–†–æ–¥–∏–ª—å–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ü–∞—Ç–∞–ª–æ–≥–∏–∏",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –§–∏–∑–∏–æ–ª–æ–≥–∏–∏"
        ],
        "–ì–æ—Ä–æ–¥—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ - 2": [
            "–†–æ–¥–∏–ª—å–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ü–∞—Ç–∞–ª–æ–≥–∏–∏",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –§–∏–∑–∏–æ–ª–æ–≥–∏–∏"
        ],
        "–ì–æ—Ä–æ–¥—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ - 3": [
            "–†–æ–¥–∏–ª—å–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ü–∞—Ç–∞–ª–æ–≥–∏–∏",
            "–û—Ç–¥–µ–ª–µ–Ω–∏–µ –§–∏–∑–∏–æ–ª–æ–≥–∏–∏"
        ]
    },
    "–Æ–ö–û": {
        "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º...": ["–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º..."]
    },
    "–ê—Å—Ç–∞–Ω–∞": {
        "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º...": ["–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º..."]
    }
}



# –ú–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–∏—Å—Ç–µ–º—ã
class UserPro(UserMixin, db.Model):
    __tablename__ = 'user_pro'
    id = db.Column(db.Integer, primary_key=True)
    full_name = db.Column(db.String(100), nullable=False)
    login = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(255), nullable=False)
    user_type = db.Column(db.String(10), default='user')
    position = db.Column(db.String(100), nullable=False)
    city = db.Column(db.String(100), nullable=False)
    medical_institution = db.Column(db.String(200), nullable=False)
    department = db.Column(db.String(200), nullable=False)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    app_type = db.Column(db.String(10), default='pro')
    # Email auth
    email = db.Column(db.String(120), unique=True, nullable=False)
    is_email_verified = db.Column(db.Boolean, default=False)
    email_verification_token = db.Column(db.String(100), unique=True)
    email_verification_expires = db.Column(db.DateTime)

class UserMama(UserMixin, db.Model):
    __tablename__ = 'user_mama'
    id = db.Column(db.Integer, primary_key=True)
    full_name = db.Column(db.String(100), nullable=False)
    login = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(255), nullable=False)
    user_type = db.Column(db.String(10), default='user')
    position = db.Column(db.String(100), nullable=False)
    city = db.Column(db.String(100), nullable=False)
    medical_institution = db.Column(db.String(200), nullable=False)
    department = db.Column(db.String(200), nullable=False)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    app_type = db.Column(db.String(10), default='mama')
    # Email auth
    email = db.Column(db.String(120), unique=True, nullable=False)
    is_email_verified = db.Column(db.Boolean, default=False)
    email_verification_token = db.Column(db.String(100), unique=True)
    email_verification_expires = db.Column(db.DateTime)

class EmailVerification(db.Model):
    __tablename__ = 'email_verification'
    id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(120), index=True, nullable=False)
    token = db.Column(db.String(100), unique=True, nullable=False)
    purpose = db.Column(db.String(20), default='register')  # register, reset
    expires_at = db.Column(db.DateTime, nullable=False)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    verified = db.Column(db.Boolean, default=False)

# CMS –ú–æ–¥–µ–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (UMAY Pro)
class News(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(200), nullable=False)
    short_description = db.Column(db.Text, nullable=False)
    full_content = db.Column(db.Text, nullable=False)
    image_url = db.Column(db.String(500))
    category = db.Column(db.String(50), default='general')
    author = db.Column(db.String(100))
    published_at = db.Column(db.DateTime, default=datetime.utcnow)
    is_published = db.Column(db.Boolean, default=True)
    views = db.Column(db.Integer, default=0)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)

class MamaContent(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(200), nullable=False)
    content = db.Column(db.Text, nullable=False)
    category = db.Column(db.String(50), nullable=False)  # sport, nutrition, vitamins, body_care, baby_care, doctor_advice
    image_url = db.Column(db.String(500))
    video_url = db.Column(db.String(500))
    trimester = db.Column(db.String(20))  # 1, 2, 3, all
    difficulty_level = db.Column(db.String(20))  # easy, medium, hard
    duration = db.Column(db.String(50))  # –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    author = db.Column(db.String(100))
    is_published = db.Column(db.Boolean, default=True)
    views = db.Column(db.Integer, default=0)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)

class MediaFile(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    filename = db.Column(db.String(200), nullable=False)
    original_filename = db.Column(db.String(200), nullable=False)
    file_path = db.Column(db.String(500), nullable=False)
    file_type = db.Column(db.String(50), nullable=False)  # image, video, document
    file_size = db.Column(db.Integer)
    uploaded_by = db.Column(db.String(100))
    uploaded_at = db.Column(db.DateTime, default=datetime.utcnow)

class Patient(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    date = db.Column(db.String(20), nullable=False)
    patient_name = db.Column(db.String(100), nullable=False)
    age = db.Column(db.Integer, nullable=False)
    pregnancy_weeks = db.Column(db.Integer, nullable=False)
    weight_before = db.Column(db.Float, nullable=False)
    weight_after = db.Column(db.Float, nullable=False)
    complications = db.Column(db.Text)
    notes = db.Column(db.Text)
    midwife = db.Column(db.String(100), nullable=False)
    birth_date = db.Column(db.String(20), nullable=False)
    birth_time = db.Column(db.String(10), nullable=False)
    child_gender = db.Column(db.String(10), nullable=False)
    child_weight = db.Column(db.Integer, nullable=False)
    delivery_method = db.Column(db.String(50), nullable=False)
    anesthesia = db.Column(db.String(50), nullable=False)
    blood_loss = db.Column(db.Integer, nullable=False)
    labor_duration = db.Column(db.Float, nullable=False)
    other_diseases = db.Column(db.Text)
    gestosis = db.Column(db.String(10), nullable=False)
    diabetes = db.Column(db.String(10), nullable=False)
    hypertension = db.Column(db.String(10), nullable=False)
    anemia = db.Column(db.String(10), nullable=False)
    infections = db.Column(db.String(10), nullable=False)
    placenta_pathology = db.Column(db.String(10), nullable=False)
    polyhydramnios = db.Column(db.String(10), nullable=False)
    oligohydramnios = db.Column(db.String(10), nullable=False)
    pls = db.Column(db.String(10), nullable=False)  # –ü–õ–° - –ø—Ä–µ—ç–∫–ª–∞–º–ø—Å–∏—è –ª–µ–≥–∫–æ–π —Å—Ç–µ–ø–µ–Ω–∏
    pts = db.Column(db.String(10), nullable=False)  # –ü–¢–° - –ø—Ä–µ—ç–∫–ª–∞–º–ø—Å–∏—è —Ç—è–∂–µ–ª–æ–π —Å—Ç–µ–ø–µ–Ω–∏
    eclampsia = db.Column(db.String(10), nullable=False)
    gestational_hypertension = db.Column(db.String(10), nullable=False)
    placenta_previa = db.Column(db.String(10), nullable=False)  # –ü–ª–æ—Ç–Ω–æ–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–∞
    shoulder_dystocia = db.Column(db.String(10), nullable=False)
    third_degree_tear = db.Column(db.String(10), nullable=False)
    cord_prolapse = db.Column(db.String(10), nullable=False)
    postpartum_hemorrhage = db.Column(db.String(10), nullable=False)
    placental_abruption = db.Column(db.String(10), nullable=False)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)

@login_manager.user_loader
def load_user(user_id):
    # Check both databases for the user with safe error handling
    try:
        user = None
        # First check UMAY Pro database
        with app.app_context():
            user = db.session.query(UserPro).get(int(user_id))
        # Then check UMAY Mama database
        if not user:
            with app.app_context():
                user = db.session.query(UserMama).get(int(user_id))
        return user
    except Exception as e:
        logger.warning(f"load_user failed: {e}")
        return None

# –ú–∞—Ä—à—Ä—É—Ç—ã
@app.route('/')
def index():
    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä –≥–ª–∞–≤–Ω–æ–π: –ø—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–µ–∑ –Ω–æ–≤–æ—Å—Ç–µ–π
    try:
        latest_news = News.query.filter_by(is_published=True).order_by(News.published_at.desc()).limit(6).all()
    except Exception as e:
        logger.warning(f"Index news query failed: {e}")
        latest_news = []
    return render_template('index.html', news=latest_news)

@app.route('/healthz')
def healthz():
    return 'ok', 200

@app.route('/api/cities')
def get_cities():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤"""
    return jsonify(list(CITIES_DATA.keys()))

@app.route('/api/institutions/<city>')
def get_institutions(city):
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ –≥–æ—Ä–æ–¥—É"""
    if city in CITIES_DATA:
        return jsonify(list(CITIES_DATA[city].keys()))
    return jsonify([])

@app.route('/api/departments/<city>/<institution>')
def get_departments(city, institution):
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–¥–µ–ª–µ–Ω–∏–π –ø–æ –≥–æ—Ä–æ–¥—É –∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—é"""
    if city in CITIES_DATA and institution in CITIES_DATA[city]:
        return jsonify(CITIES_DATA[city][institution])
    return jsonify([])

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        login = request.form.get('login')
        password = request.form.get('password')
        is_medic = request.form.get('is_medic') == 'on'  # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–ú–µ–¥–∏–∫"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
        user = None
        app_type = None
        
        if is_medic:
            # –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–ú–µ–¥–∏–∫" –≤–∫–ª—é—á–µ–Ω - –∏—â–µ–º –≤ UMAY Pro
            with app.app_context():
                user = db.session.query(UserPro).filter_by(login=login).first()
                if user:
                    app_type = 'pro'
        else:
            # –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–ú–µ–¥–∏–∫" –≤—ã–∫–ª—é—á–µ–Ω - –∏—â–µ–º –≤ UMAY Mama
            with app.app_context():
                user = db.session.query(UserMama).filter_by(login=login).first()
                if user:
                    app_type = 'mama'
        
        if user and check_password_hash(user.password, password):
            # Always skip email verification for Joker and admin users
            require_email_verification = True
            try:
                if getattr(user, 'login', '') == 'Joker' or getattr(user, 'user_type', '') == 'admin':
                    require_email_verification = False
            except Exception:
                require_email_verification = True

            # Check if email is verified (unless bypassed)
            if require_email_verification and not getattr(user, 'is_email_verified', False):
                flash('–í–∞—à email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å.', 'error')
                return render_template('login.html', unverified_email=getattr(user, 'email', ''), unverified_app_type=app_type)
            
            login_user(user)
            
            # Store app type in session
            session['app_type'] = app_type
            
            if getattr(user, 'login', '') == 'Joker':
                flash('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –°—É–ø–µ—Ä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', 'success')
                return redirect(url_for('admin_panel'))
            elif getattr(user, 'user_type', '') == 'admin':
                flash('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!', 'success')
                return redirect(url_for('admin_panel'))
            elif app_type == 'mama':
                flash('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UMAY Mama!', 'success')
                return redirect(url_for('mama_dashboard'))
            else:
                flash('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UMAY Pro!', 'success')
                return redirect(url_for('dashboard'))
        else:
            if is_medic:
                flash('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞!', 'error')
            else:
                flash('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–æ–∂–µ–Ω–∏—Ü!', 'error')
    
    return render_template('login.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    # Lightweight debug
    if request.args.get('debug') == '1':
        return f"REGISTER_DEBUG: method={request.method}, user={getattr(current_user, 'login', 'anon')}, ios={is_ios_device()}"
    if request.method == 'POST':
        full_name = request.form.get('full_name', '').strip()
        login = request.form.get('login', '').strip()
        email = request.form.get('email', '').strip().lower()
        password = request.form.get('password', '')
        user_type = request.form.get('user_type', 'user')
        app_type = request.form.get('app_type', 'pro')  # 'pro' or 'mama'
        
        # Validation
        if not full_name:
            flash('–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
            return render_template('register.html')
        
        if not login:
            flash('–õ–æ–≥–∏–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
            return render_template('register.html')
        
        if not email:
            flash('Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
            return render_template('register.html')
        
        # Basic email validation
        if '@' not in email or '.' not in email:
            flash('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å!', 'error')
            return render_template('register.html')
        
        if len(password) < 6:
            flash('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!', 'error')
            return render_template('register.html')
        
        confirm_password = request.form.get('confirm_password', '')
        if password != confirm_password:
            flash('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', 'error')
            return render_template('register.html')
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–æ–ª–µ–π –¥–ª—è PostgreSQL
        if len(full_name) > 100:
            flash('–ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
            return render_template('register.html')
        
        if len(login) > 50:
            flash('–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
            return render_template('register.html')
        
        if len(email) > 120:
            flash('Email —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 120 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
            return render_template('register.html')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î –±–µ–∑–æ–ø–∞—Å–Ω–æ
        try:
            existing_user = None
            if app_type == 'mama':
                with app.app_context():
                    existing_user = db.session.query(UserMama).filter_by(login=login).first()
                    if not existing_user:
                        existing_user = db.session.query(UserMama).filter_by(email=email).first()
            else:
                with app.app_context():
                    existing_user = db.session.query(UserPro).filter_by(login=login).first()
                    if not existing_user:
                        existing_user = db.session.query(UserPro).filter_by(email=email).first()
            
            if existing_user:
                flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –∏–ª–∏ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'error')
                return render_template('register.html')
            
            hashed_password = generate_password_hash(password)

            # Generate email verification token
            email_token = generate_email_token()
            token_expires = datetime.utcnow() + timedelta(hours=EMAIL_VERIFICATION_TTL_HOURS)
            
            if user_type == 'user' and app_type == 'mama':
                # UMAY Mama user registration
                with app.app_context():
                    new_user = UserMama(
                        full_name=full_name[:100],
                        login=login[:50],
                        password=hashed_password,
                        user_type='user',
                        position='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                        city='–ù–µ —É–∫–∞–∑–∞–Ω',
                        medical_institution='–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                        department='–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                        app_type='mama',
                        email=email,
                        is_email_verified=False,
                        email_verification_token=email_token,
                        email_verification_expires=token_expires
                    )
                    db.session.add(new_user)
                    
                    # Create email verification record
                    verification = EmailVerification(
                        email=email,
                        token=email_token,
                        purpose='register',
                        expires_at=token_expires
                    )
                    db.session.add(verification)
                    db.session.commit()
                
            elif user_type in ('midwife', 'manager') and app_type == 'pro':
                # UMAY Pro registration (midwife or manager)
                position = request.form.get('position', '').strip()
                city = request.form.get('city', '').strip()
                medical_institution = request.form.get('medical_institution', '').strip()
                department = request.form.get('department', '').strip()
                
                # Validate required fields for professionals
                if not position:
                    flash('–î–æ–ª–∂–Ω–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
                    return render_template('register.html')
                
                if not city:
                    flash('–ì–æ—Ä–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
                    return render_template('register.html')
                
                if not medical_institution:
                    flash('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
                    return render_template('register.html')
                
                if not department:
                    flash('–û—Ç–¥–µ–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!', 'error')
                    return render_template('register.html')
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–æ–ª–µ–π
                if len(position) > 100:
                    flash('–î–æ–ª–∂–Ω–æ—Å—Ç—å —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è! –ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
                    return render_template('register.html')
                
                if len(city) > 100:
                    flash('–ì–æ—Ä–æ–¥ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
                    return render_template('register.html')
                
                if len(medical_institution) > 200:
                    flash('–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
                    return render_template('register.html')
                
                if len(department) > 200:
                    flash('–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤.', 'error')
                    return render_template('register.html')
                
                with app.app_context():
                    new_user = UserPro(
                        full_name=full_name[:100],
                        login=login[:50],
                        password=hashed_password,
                        user_type=user_type,
                        position=position[:100],
                        city=city[:100],
                        medical_institution=medical_institution[:200],
                        department=department[:200],
                        app_type='pro',
                        email=email,
                        is_email_verified=False,
                        email_verification_token=email_token,
                        email_verification_expires=token_expires
                    )
                    db.session.add(new_user)
                    
                    # Create email verification record
                    verification = EmailVerification(
                        email=email,
                        token=email_token,
                        purpose='register',
                        expires_at=token_expires
                    )
                    db.session.add(verification)
                    db.session.commit()
            else:
                flash('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!', 'error')
                return render_template('register.html')
            
            # Send verification email
            ok, message = send_verification_email(email, email_token, user_type, app_type)
            if not ok:
                # If email fails, delete user and show error
                db.session.delete(new_user)
                db.session.delete(verification)
                db.session.commit()
                flash(f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {message}', 'error')
                return render_template('register.html')
            
            flash('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞.', 'success')
            return redirect(url_for('login'))
            
        except Exception as e:
            logger.exception(f"Registration error: {e}")
            flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error')
            return render_template('register.html')
    
    try:
        logger.info("Rendering register.html")
        # iOS Safari fallback: avoid heavy animations if needed
        template_name = 'register.html'
        return render_template(template_name)
    except Exception as e:
        logger.error(f"Register GET render failed: {e}")
        return f"Register render error: {e}", 500



@app.route('/recover', methods=['GET', 'POST'])
def recover():
    if request.method == 'POST':
        email = request.form.get('email', '').strip().lower()
        new_password = request.form.get('new_password', '')
        confirm_password = request.form.get('confirm_password', '')

        if not email:
            flash('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å!', 'error')
            return render_template('recover.html')

        if new_password and (len(new_password) < 6 or new_password != confirm_password):
            flash('–ü–∞—Ä–æ–ª—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç', 'error')
            return render_template('recover.html')

        # Find user by email
        user = db.session.query(UserPro).filter_by(email=email).first()
        if not user:
            user = db.session.query(UserMama).filter_by(email=email).first()
        if not user:
            flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error')
            return render_template('recover.html')

        # Generate reset token and send email
        reset_token = generate_email_token()
        token_expires = datetime.utcnow() + timedelta(hours=1)
        
        # Create reset verification record
        verification = EmailVerification(
            email=email,
            token=reset_token,
            purpose='reset',
            expires_at=token_expires
        )
        db.session.add(verification)
        db.session.commit()
        
        # Send reset email
        ok, message = send_verification_email(email, reset_token, user.user_type, user.app_type, purpose='reset')
        if not ok:
            flash(f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {message}', 'error')
            return render_template('recover.html')
        
        flash('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à email.', 'success')
        return redirect(url_for('login'))

    return render_template('recover.html')

@app.route('/logout')
@login_required
def logout():
    logout_user()
    flash('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã!', 'success')
    return redirect(url_for('index'))

@app.route('/dashboard')
@login_required
@pro_required
def dashboard():
    logger.info(f"Dashboard accessed by user: {current_user.full_name} (login: {current_user.login})")
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        patients = Patient.query.all()
        total_patients = len(patients)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—É
        male_count = sum(1 for p in patients if p.child_gender == '–ú–∞–ª—å—á–∏–∫')
        female_count = sum(1 for p in patients if p.child_gender == '–î–µ–≤–æ—á–∫–∞')
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–ø–æ—Å–æ–±–∞–º —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        natural_births = sum(1 for p in patients if p.delivery_method == '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã')
        cesarean_count = sum(1 for p in patients if p.delivery_method == '–ö–µ—Å–∞—Ä–µ–≤–æ —Å–µ—á–µ–Ω–∏–µ')
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü
        from datetime import datetime
        current_month = datetime.now().month
        current_year = datetime.now().year
        this_month = 0
        
        for patient in patients:
            try:
                birth_date = datetime.strptime(patient.birth_date, '%Y-%m-%d')
                if birth_date.month == current_month and birth_date.year == current_year:
                    this_month += 1
            except:
                continue
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        recent_patients = Patient.query.order_by(Patient.id.desc()).limit(10).all()
        
        return render_template('dashboard.html',
                             total_patients=total_patients,
                             male_count=male_count, female_count=female_count,
                             natural_births=natural_births,
                             cesarean_count=cesarean_count,
                             this_month=this_month,
                             patients=recent_patients)
    except Exception as e:
        logger.error(f"Error in dashboard: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', 'error')
        return redirect(url_for('index'))

@app.route('/mama-dashboard')
@login_required
@mama_required
def mama_dashboard():
    """–î–∞—à–±–æ—Ä–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π UMAY Mama"""
    logger.info(f"Mama Dashboard accessed by user: {current_user.full_name} (login: {current_user.login})")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Å—Ç–∞—Ç—å–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—É–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä is_published)
        mama_content = MamaContent.query.order_by(MamaContent.created_at.desc()).limit(6).all()
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        logger.info(f"Found {len(mama_content)} articles in mama_content")
        for article in mama_content:
            logger.info(f"Article: {article.title}, Published: {article.is_published}, Category: {article.category}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—É–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä is_published)
        total_content = MamaContent.query.count()
        sport_content = MamaContent.query.filter_by(category='sport').count()
        nutrition_content = MamaContent.query.filter_by(category='nutrition').count()
        vitamins_content = MamaContent.query.filter_by(category='vitamins').count()
        
        logger.info(f"Statistics - Total: {total_content}, Sport: {sport_content}, Nutrition: {nutrition_content}, Vitamins: {vitamins_content}")
        
        return render_template('mama/dashboard.html',
                             mama_content=mama_content,
                             total_content=total_content,
                             sport_content=sport_content,
                             nutrition_content=nutrition_content,
                             vitamins_content=vitamins_content)
    except Exception as e:
        logger.error(f"Error in mama dashboard: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UMAY Mama', 'error')
        return redirect(url_for('index'))

@app.route('/add_patient', methods=['GET', 'POST'])
@app.route('/–¥–æ–±–∞–≤–∏—Ç—å_–ø–∞—Ü–∏–µ–Ω—Ç–∞', methods=['GET', 'POST'])  # alias for Russian URL to avoid 404/blank
@login_required
def add_patient():
    # Allow all –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫—Ä–æ–º–µ —É–ø—Ä–∞–≤–ª–µ–Ω—Ü–µ–≤ (–∫—Ä–æ–º–µ Joker)
    if getattr(current_user, 'user_type', '') == 'manager' and getattr(current_user, 'login', '') != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É.', 'error')
        return redirect(url_for('index'))
    # Check if mobile version is requested
    mobile_requested = request.args.get('mobile') == '1'
    # Server-side fallback: if no param but user-agent is mobile, serve mobile template
    if not mobile_requested and is_mobile_device():
        mobile_requested = True

    # Lightweight debug endpoint (safe): /add_patient?debug=1
    if request.args.get('debug') == '1':
        return f"ADD_PATIENT_DEBUG: mobile_requested={mobile_requested}, ios={is_ios_device()}, user={getattr(current_user, 'login', 'anon')}"
    
    if request.method == 'POST':
        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–±–æ–∫—Å–æ–≤ - –µ—Å–ª–∏ –Ω–µ –æ—Ç–º–µ—á–µ–Ω, —Ç–æ "–ù–µ—Ç"
            gestosis = "–î–∞" if 'gestosis' in request.form else "–ù–µ—Ç"
            diabetes = "–î–∞" if 'diabetes' in request.form else "–ù–µ—Ç"
            hypertension = "–î–∞" if 'hypertension' in request.form else "–ù–µ—Ç"
            anemia = "–î–∞" if 'anemia' in request.form else "–ù–µ—Ç"
            infections = "–î–∞" if 'infections' in request.form else "–ù–µ—Ç"
            placenta_pathology = "–î–∞" if 'placenta_pathology' in request.form else "–ù–µ—Ç"
            polyhydramnios = "–î–∞" if 'polyhydramnios' in request.form else "–ù–µ—Ç"
            oligohydramnios = "–î–∞" if 'oligohydramnios' in request.form else "–ù–µ—Ç"
            pls = "–î–∞" if 'pls' in request.form else "–ù–µ—Ç"
            pts = "–î–∞" if 'pts' in request.form else "–ù–µ—Ç"
            eclampsia = "–î–∞" if 'eclampsia' in request.form else "–ù–µ—Ç"
            gestational_hypertension = "–î–∞" if 'gestational_hypertension' in request.form else "–ù–µ—Ç"
            placenta_previa = "–î–∞" if 'placenta_previa' in request.form else "–ù–µ—Ç"
            shoulder_dystocia = "–î–∞" if 'shoulder_dystocia' in request.form else "–ù–µ—Ç"
            third_degree_tear = "–î–∞" if 'third_degree_tear' in request.form else "–ù–µ—Ç"
            cord_prolapse = "–î–∞" if 'cord_prolapse' in request.form else "–ù–µ—Ç"
            postpartum_hemorrhage = "–î–∞" if 'postpartum_hemorrhage' in request.form else "–ù–µ—Ç"
            placental_abruption = "–î–∞" if 'placental_abruption' in request.form else "–ù–µ—Ç"
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            if not request.form['patient_name'] or request.form['patient_name'].strip() == "":
                flash('–§–ò–û —Ä–æ–∂–µ–Ω–∏—Ü—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 'error')
                return render_template('mobile/add_patient.html' if mobile_requested else 'add_patient.html')
            
            if not request.form['child_gender'] or request.form['child_gender'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞', 'error')
                return render_template('mobile/add_patient.html' if mobile_requested else 'add_patient.html')
            
            if not request.form['delivery_method'] or request.form['delivery_method'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è', 'error')
                return render_template('mobile/add_patient.html' if mobile_requested else 'add_patient.html')
            
            if not request.form['anesthesia'] or request.form['anesthesia'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∞–Ω–µ—Å—Ç–µ–∑–∏–∏', 'error')
                return render_template('mobile/add_patient.html' if mobile_requested else 'add_patient.html')
            
            new_patient = Patient(
                date=datetime.now().strftime("%Y-%m-%d %H:%M"),
                patient_name=request.form['patient_name'].strip(),
                age=int(request.form['age']),
                pregnancy_weeks=int(request.form['pregnancy_weeks']),
                weight_before=float(request.form['weight_before']),
                weight_after=float(request.form['weight_after']),
                complications=request.form['complications'] or "",
                notes=request.form['notes'] or "",
                midwife=current_user.full_name,
                birth_date=request.form['birth_date'],
                birth_time=request.form['birth_time'],
                child_gender=request.form['child_gender'],
                child_weight=int(request.form['child_weight']),
                delivery_method=request.form['delivery_method'],
                anesthesia=request.form['anesthesia'],
                blood_loss=int(request.form['blood_loss']),
                labor_duration=float(request.form['labor_duration']),
                other_diseases=request.form['other_diseases'] or "",
                gestosis=gestosis,
                diabetes=diabetes,
                hypertension=hypertension,
                anemia=anemia,
                infections=infections,
                placenta_pathology=placenta_pathology,
                polyhydramnios=polyhydramnios,
                oligohydramnios=oligohydramnios,
                pls=pls,
                pts=pts,
                eclampsia=eclampsia,
                gestational_hypertension=gestational_hypertension,
                placenta_previa=placenta_previa,
                shoulder_dystocia=shoulder_dystocia,
                third_degree_tear=third_degree_tear,
                cord_prolapse=cord_prolapse,
                postpartum_hemorrhage=postpartum_hemorrhage,
                placental_abruption=placental_abruption
            )
            
            db.session.add(new_patient)
            db.session.commit()
            flash('–ü–∞—Ü–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success')
            return redirect(url_for('dashboard'))
        except Exception as e:
            db.session.rollback()
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {e}")
            flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.', 'error')
    
    # Render appropriate template based on mobile request
    prefer_mobile = mobile_requested
    # iOS fallback to avoid potential blank screen
    if prefer_mobile and is_ios_device() and request.args.get('force') != 'mobile':
        logger.info('iOS detected -> fallback to desktop add_patient; use ?force=mobile to override')
        prefer_mobile = False

    template_name = 'mobile/add_patient.html' if prefer_mobile else 'add_patient.html'
    try:
        logger.info(f"Rendering add_patient template: {template_name}, mobile={mobile_requested}")
        return render_template(template_name)
    except Exception as e:
        logger.error(f"Add patient GET render failed: {e}")
        return f"Render error: {e}", 500

@app.route('/edit_patient/<int:patient_id>', methods=['GET', 'POST'])
@login_required
@pro_clinical_required
def edit_patient(patient_id):
    patient = Patient.query.get_or_404(patient_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏
    # –ê–∫—É—à–µ—Ä–∫–∏ –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏
    if current_user.login != 'Joker' and patient.midwife != current_user.full_name:
        flash('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏', 'error')
        return redirect(url_for('dashboard'))
    
    if request.method == 'POST':
        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–±–æ–∫—Å–æ–≤ - –µ—Å–ª–∏ –Ω–µ –æ—Ç–º–µ—á–µ–Ω, —Ç–æ "–ù–µ—Ç"
            gestosis = "–î–∞" if 'gestosis' in request.form else "–ù–µ—Ç"
            diabetes = "–î–∞" if 'diabetes' in request.form else "–ù–µ—Ç"
            hypertension = "–î–∞" if 'hypertension' in request.form else "–ù–µ—Ç"
            anemia = "–î–∞" if 'anemia' in request.form else "–ù–µ—Ç"
            infections = "–î–∞" if 'infections' in request.form else "–ù–µ—Ç"
            placenta_pathology = "–î–∞" if 'placenta_pathology' in request.form else "–ù–µ—Ç"
            polyhydramnios = "–î–∞" if 'polyhydramnios' in request.form else "–ù–µ—Ç"
            oligohydramnios = "–î–∞" if 'oligohydramnios' in request.form else "–ù–µ—Ç"
            pls = "–î–∞" if 'pls' in request.form else "–ù–µ—Ç"
            pts = "–î–∞" if 'pts' in request.form else "–ù–µ—Ç"
            eclampsia = "–î–∞" if 'eclampsia' in request.form else "–ù–µ—Ç"
            gestational_hypertension = "–î–∞" if 'gestational_hypertension' in request.form else "–ù–µ—Ç"
            placenta_previa = "–î–∞" if 'placenta_previa' in request.form else "–ù–µ—Ç"
            shoulder_dystocia = "–î–∞" if 'shoulder_dystocia' in request.form else "–ù–µ—Ç"
            third_degree_tear = "–î–∞" if 'third_degree_tear' in request.form else "–ù–µ—Ç"
            cord_prolapse = "–î–∞" if 'cord_prolapse' in request.form else "–ù–µ—Ç"
            postpartum_hemorrhage = "–î–∞" if 'postpartum_hemorrhage' in request.form else "–ù–µ—Ç"
            placental_abruption = "–î–∞" if 'placental_abruption' in request.form else "–ù–µ—Ç"
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            if not request.form['patient_name'] or request.form['patient_name'].strip() == "":
                flash('–§–ò–û —Ä–æ–∂–µ–Ω–∏—Ü—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 'error')
                return render_template('edit_patient.html', patient=patient)
            
            if not request.form['child_gender'] or request.form['child_gender'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞', 'error')
                return render_template('edit_patient.html', patient=patient)
            
            if not request.form['delivery_method'] or request.form['delivery_method'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è', 'error')
                return render_template('edit_patient.html', patient=patient)
            
            if not request.form['anesthesia'] or request.form['anesthesia'] == "":
                flash('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∞–Ω–µ—Å—Ç–µ–∑–∏–∏', 'error')
                return render_template('edit_patient.html', patient=patient)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            patient.patient_name = request.form['patient_name'].strip()
            patient.age = int(request.form['age'])
            patient.pregnancy_weeks = int(request.form['pregnancy_weeks'])
            patient.weight_before = float(request.form['weight_before'])
            patient.weight_after = float(request.form['weight_after'])
            patient.complications = request.form['complications'] or ""
            patient.notes = request.form['notes'] or ""
            patient.birth_date = request.form['birth_date']
            patient.birth_time = request.form['birth_time']
            patient.child_gender = request.form['child_gender']
            patient.child_weight = int(request.form['child_weight'])
            patient.delivery_method = request.form['delivery_method']
            patient.anesthesia = request.form['anesthesia']
            patient.blood_loss = int(request.form['blood_loss'])
            patient.labor_duration = float(request.form['labor_duration'])
            patient.other_diseases = request.form['other_diseases'] or ""
            patient.gestosis = gestosis
            patient.diabetes = diabetes
            patient.hypertension = hypertension
            patient.anemia = anemia
            patient.infections = infections
            patient.placenta_pathology = placenta_pathology
            patient.polyhydramnios = polyhydramnios
            patient.oligohydramnios = oligohydramnios
            patient.pls = pls
            patient.pts = pts
            patient.eclampsia = eclampsia
            patient.gestational_hypertension = gestational_hypertension
            patient.placenta_previa = placenta_previa
            patient.shoulder_dystocia = shoulder_dystocia
            patient.third_degree_tear = third_degree_tear
            patient.cord_prolapse = cord_prolapse
            patient.postpartum_hemorrhage = postpartum_hemorrhage
            patient.placental_abruption = placental_abruption
            
            db.session.commit()
            flash('–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'success')
            return redirect(url_for('dashboard'))
        except Exception as e:
            db.session.rollback()
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {e}")
            flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.', 'error')
    
    return render_template('edit_patient.html', patient=patient)

@app.route('/delete_patient/<int:patient_id>', methods=['POST'])
@login_required
@pro_clinical_required
def delete_patient(patient_id):
    patient = Patient.query.get_or_404(patient_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏
    # –ê–∫—É—à–µ—Ä–∫–∏ –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏
    if current_user.login != 'Joker' and patient.midwife != current_user.full_name:
        flash('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏', 'error')
        return redirect(url_for('dashboard'))
    
    try:
        db.session.delete(patient)
        db.session.commit()
        flash('–ó–∞–ø–∏—Å—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!', 'success')
    except Exception as e:
        db.session.rollback()
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞.', 'error')
    
    return redirect(url_for('dashboard'))

@app.route('/search')
@login_required
@pro_required
def search():
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
    search_query = request.args.get('search', '')
    date_from = request.args.get('date_from', '')
    date_to = request.args.get('date_to', '')
    selected_midwives = request.args.getlist('midwives')
    selected_methods = request.args.getlist('delivery_methods')
    selected_genders = request.args.getlist('genders')
    age_min = request.args.get('age_min', '')
    age_max = request.args.get('age_max', '')
    weight_min = request.args.get('weight_min', '')
    weight_max = request.args.get('weight_max', '')
    
    # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    query = Patient.query
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    if search_query:
        query = query.filter(Patient.patient_name.contains(search_query))
    if date_from:
        query = query.filter(Patient.birth_date >= date_from)
    if date_to:
        query = query.filter(Patient.birth_date <= date_to)
    if selected_midwives:
        query = query.filter(Patient.midwife.in_(selected_midwives))
    if selected_methods:
        query = query.filter(Patient.delivery_method.in_(selected_methods))
    if selected_genders:
        query = query.filter(Patient.child_gender.in_(selected_genders))
    if age_min:
        query = query.filter(Patient.age >= int(age_min))
    if age_max:
        query = query.filter(Patient.age <= int(age_max))
    if weight_min:
        query = query.filter(Patient.child_weight >= int(weight_min))
    if weight_max:
        query = query.filter(Patient.child_weight <= int(weight_max))
    
    patients = query.all()
    
    # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    midwives = db.session.query(Patient.midwife).distinct().all()
    delivery_methods = db.session.query(Patient.delivery_method).distinct().all()
    genders = db.session.query(Patient.child_gender).distinct().all()
    
    return render_template('search.html', 
                         patients=patients,
                         midwives=[m[0] for m in midwives],
                         delivery_methods=[d[0] for d in delivery_methods],
                         genders=[g[0] for g in genders])

@app.route('/profile')
@login_required
@pro_required
def profile():
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    total_patients = Patient.query.filter_by(midwife=current_user.full_name).count()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    if total_patients > 0:
        avg_age = db.session.query(db.func.avg(Patient.age)).filter_by(midwife=current_user.full_name).scalar() or 0
        avg_weight = db.session.query(db.func.avg(Patient.child_weight)).filter_by(midwife=current_user.full_name).scalar() or 0
    else:
        avg_age = avg_weight = 0
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    recent_patients = Patient.query.filter_by(midwife=current_user.full_name).order_by(Patient.created_at.desc()).limit(5).all()
    
    return render_template('profile.html', 
                         total_patients=total_patients,
                         avg_age=round(avg_age, 1),
                         avg_child_weight=round(avg_weight, 1),
                         recent_patients=recent_patients)

# ============================================================================
# CMS –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –ú–ê–†–®–†–£–¢–´
# ============================================================================

@app.route('/admin')
@login_required
@admin_required
def admin_panel():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    news_count = News.query.count()
    mama_content_count = MamaContent.query.count()
    media_count = MediaFile.query.count()
    patients_count = Patient.query.count()
    
    return render_template('admin/dashboard.html', 
                         news_count=news_count,
                         mama_content_count=mama_content_count,
                         media_count=media_count,
                         patients_count=patients_count)

@app.route('/admin/news')
@login_required
@admin_required
def admin_news():
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏"""
    news = News.query.order_by(News.created_at.desc()).all()
    return render_template('admin/news.html', news=news)

@app.route('/admin/news/add', methods=['GET', 'POST'])
@login_required
@admin_required
def admin_news_add():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    
    if request.method == 'POST':
        title = request.form.get('title')
        short_description = request.form.get('short_description')
        full_content = request.form.get('full_content')
        category = request.form.get('category', 'general')
        image_url = request.form.get('image_url')
        
        news = News(
            title=title,
            short_description=short_description,
            full_content=full_content,
            category=category,
            image_url=image_url,
            author=current_user.full_name
        )
        
        db.session.add(news)
        db.session.commit()
        
        flash('–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success')
        return redirect(url_for('admin_news'))
    
    return render_template('admin/news_form.html')

@app.route('/admin/news/edit/<int:news_id>', methods=['GET', 'POST'])
@login_required
@admin_required
def admin_news_edit(news_id):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    
    news = News.query.get_or_404(news_id)
    
    if request.method == 'POST':
        news.title = request.form.get('title')
        news.short_description = request.form.get('short_description')
        news.full_content = request.form.get('full_content')
        news.category = request.form.get('category', 'general')
        news.image_url = request.form.get('image_url')
        news.updated_at = datetime.utcnow()
        
        db.session.commit()
        
        flash('–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success')
        return redirect(url_for('admin_news'))
    
    return render_template('admin/news_form.html', news=news)

@app.route('/admin/news/delete/<int:news_id>', methods=['POST'])
@login_required
@admin_required
def admin_news_delete(news_id):
    """–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    
    news = News.query.get_or_404(news_id)
    
    try:
        db.session.delete(news)
        db.session.commit()
        return jsonify({'success': True, 'message': '–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!'})
    except Exception as e:
        db.session.rollback()
        return jsonify({'error': '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏.'}), 500

@app.route('/admin/mama-content')
@login_required
@admin_required
def admin_mama_content():
    """–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –£–º–∞–π –ú–∞–º–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_content = MamaContent.query.count()
    published_content = MamaContent.query.filter_by(is_published=True).count()
    pending_content = MamaContent.query.filter_by(is_published=False).count()
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_stats = db.session.query(
        MamaContent.category,
        db.func.count(MamaContent.id).label('count')
    ).group_by(MamaContent.category).all()
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
    recent_content = MamaContent.query.order_by(MamaContent.created_at.desc()).limit(5).all()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Å–ª–æ–≤–∞—Ä—å
    categories_dict = {stat.category: stat.count for stat in categories_stats}
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats = {
        'total': total_content,
        'published': published_content,
        'pending': pending_content,
        'categories': categories_dict
    }
    
    return render_template('admin/mama_content_dashboard.html',
                         stats=stats,
                         recent_content=recent_content)

@app.route('/admin/mama-content/list')
@login_required
@admin_required
def admin_mama_content_list():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
    all_content = MamaContent.query.order_by(MamaContent.created_at.desc()).all()
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    categories = {
        'sport': 'üèÉ –°–ø–æ—Ä—Ç',
        'nutrition': 'üçé –ü–∏—Ç–∞–Ω–∏–µ',
        'vitamins': 'üíä –í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': 'üíÖ –£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': 'üë∂ –£—Ö–æ–¥ –∑–∞ –º–∞–ª—ã—à–æ–º',
        'doctor_advice': 'üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    return render_template('admin/mama_content_list.html',
                         content_list=all_content,
                         categories=categories)

@app.route('/admin/mama-content/add', methods=['GET', 'POST'])
@login_required
def admin_mama_content_add():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    if request.method == 'POST':
        title = request.form.get('title')
        content = request.form.get('content')
        category = request.form.get('category')
        trimester = request.form.get('trimester')
        difficulty_level = request.form.get('difficulty_level')
        duration = request.form.get('duration')
        image_url = request.form.get('image_url')
        video_url = request.form.get('video_url')
        author = request.form.get('author', current_user.full_name)
        
        new_content = MamaContent(
            title=title,
            content=content,
            category=category,
            trimester=trimester,
            difficulty_level=difficulty_level,
            duration=duration,
            image_url=image_url,
            video_url=video_url,
            author=author,
            is_published=True
        )
        
        db.session.add(new_content)
        db.session.commit()
        
        flash('–ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success')
        return redirect(url_for('admin_mama_content'))
    
    categories = {
        'sport': '–°–ø–æ—Ä—Ç',
        'nutrition': '–ü–∏—Ç–∞–Ω–∏–µ',
        'vitamins': '–í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω—ã–º',
        'doctor_advice': '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    return render_template('admin/mama_content_add.html', categories=categories)

@app.route('/admin/mama-content/edit/<int:content_id>', methods=['GET', 'POST'])
@login_required
def admin_mama_content_edit(content_id):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    content = MamaContent.query.get_or_404(content_id)
    
    if request.method == 'POST':
        content.title = request.form.get('title')
        content.content = request.form.get('content')
        content.category = request.form.get('category')
        content.trimester = request.form.get('trimester')
        content.difficulty_level = request.form.get('difficulty_level')
        content.duration = request.form.get('duration')
        content.image_url = request.form.get('image_url')
        content.video_url = request.form.get('video_url')
        content.is_published = request.form.get('is_published') == 'on'
        
        db.session.commit()
        flash('–ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success')
        return redirect(url_for('admin_mama_content'))
    
    categories = {
        'sport': '–°–ø–æ—Ä—Ç',
        'nutrition': '–ü–∏—Ç–∞–Ω–∏–µ',
        'vitamins': '–í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω—ã–º',
        'doctor_advice': '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    return render_template('admin/mama_content_edit.html', content=content, categories=categories)

@app.route('/admin/mama-content/delete/<int:content_id>', methods=['POST'])
@login_required
def admin_mama_content_delete(content_id):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    content = MamaContent.query.get_or_404(content_id)
    db.session.delete(content)
    db.session.commit()
    
    flash('–ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!', 'success')
    return redirect(url_for('admin_mama_content'))

@app.route('/admin/mama-content/moderate')
@login_required
@admin_required
def admin_mama_content_moderate():
    """–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (–Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ)
    pending_content = MamaContent.query.filter_by(is_published=False).order_by(MamaContent.created_at.desc()).all()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    total_content = MamaContent.query.count()
    published_content = MamaContent.query.filter_by(is_published=True).count()
    categories_count = db.session.query(MamaContent.category).distinct().count()
    
    return render_template('admin/mama_content_moderate.html', 
                         pending_content=pending_content,
                         total_content=total_content,
                         published_content=published_content,
                         categories_count=categories_count)

@app.route('/admin/mama-content/approve/<int:content_id>', methods=['POST'])
@login_required
def admin_mama_content_approve(content_id):
    """–û–¥–æ–±—Ä–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    content = MamaContent.query.get_or_404(content_id)
    content.is_published = True
    db.session.commit()
    
    flash('–ö–æ–Ω—Ç–µ–Ω—Ç –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!', 'success')
    return redirect(url_for('admin_mama_content_moderate'))

@app.route('/admin/mama-content/reject/<int:content_id>', methods=['POST'])
@login_required
def admin_mama_content_reject(content_id):
    """–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    content = MamaContent.query.get_or_404(content_id)
    db.session.delete(content)
    db.session.commit()
    
    flash('–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏ —É–¥–∞–ª–µ–Ω!', 'success')
    return redirect(url_for('admin_mama_content_moderate'))



@app.route('/admin/mama-content/generate', methods=['GET', 'POST'])
@login_required
def admin_mama_content_generate():
    """–ò–ò-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    if request.method == 'POST':
        category = request.form.get('category')
        trimester = request.form.get('trimester')
        count = int(request.form.get('count', 1))
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò
        generated_content = generate_ai_content(category, trimester, count)
        
        flash(f'–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(generated_content)} —Å—Ç–∞—Ç–µ–π!', 'success')
        return redirect(url_for('admin_mama_content'))
    
    categories = {
        'sport': '–°–ø–æ—Ä—Ç',
        'nutrition': '–ü–∏—Ç–∞–Ω–∏–µ',
        'vitamins': '–í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω—ã–º',
        'doctor_advice': '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    return render_template('admin/mama_content_generate.html', categories=categories)

@app.route('/admin/mama-content/analytics')
@login_required
@admin_required
def admin_mama_content_analytics():
    """–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 'error')
        return redirect(url_for('dashboard'))
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    category_stats = db.session.query(
        MamaContent.category,
        db.func.count(MamaContent.id).label('count'),
        db.func.avg(MamaContent.views).label('avg_views')
    ).group_by(MamaContent.category).all()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞–º
    trimester_stats = db.session.query(
        MamaContent.trimester,
        db.func.count(MamaContent.id).label('count')
    ).filter(MamaContent.trimester.isnot(None)).group_by(MamaContent.trimester).all()
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
    popular_content = MamaContent.query.order_by(MamaContent.views.desc()).limit(10).all()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    recent_stats = db.session.query(
        db.func.date(MamaContent.created_at).label('date'),
        db.func.count(MamaContent.id).label('count')
    ).group_by(db.func.date(MamaContent.created_at)).order_by(db.func.date(MamaContent.created_at).desc()).limit(30).all()
    
    return render_template('admin/mama_content_analytics.html',
                         category_stats=category_stats,
                         trimester_stats=trimester_stats,
                         popular_content=popular_content,
                         recent_stats=recent_stats)

def get_latest_news(category):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"""
    try:
        # –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        search_queries = {
            'sport': ['–±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —Å–ø–æ—Ä—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è', '—Ñ–∏—Ç–Ω–µ—Å –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö', '–π–æ–≥–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å'],
            'nutrition': ['–ø–∏—Ç–∞–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö', '–¥–∏–µ—Ç–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '–≤–∏—Ç–∞–º–∏–Ω—ã –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å'],
            'vitamins': ['–≤–∏—Ç–∞–º–∏–Ω—ã –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '—Ñ–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞', '–≤–∏—Ç–∞–º–∏–Ω D –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å'],
            'body_care': ['—É—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '–∫–æ–∂–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '—Ä–∞—Å—Ç—è–∂–∫–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å'],
            'baby_care': ['—É—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–º', '–∫–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä—É–¥—å—é', '—Å–æ–Ω –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ'],
            'doctor_advice': ['—Å–æ–≤–µ—Ç—ã –≤—Ä–∞—á–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', '–±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', '—Ä–æ–¥—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞']
        }
        
        if category not in search_queries:
            return []
        
        news_items = []
        for query in search_queries[category][:2]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 –∑–∞–ø—Ä–æ—Å–∞
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º Google News API –∏–ª–∏ RSS-–ª–µ–Ω—Ç—ã
                url = f"https://news.google.com/search?q={query}&hl=ru&gl=RU&ceid=RU:ru"
                response = requests.get(url, timeout=10)
                if response.status_code == 200:
                    soup = BeautifulSoup(response.content, 'html.parser')
                    articles = soup.find_all('article', limit=3)
                    
                    for article in articles:
                        title_elem = article.find('h3')
                        if title_elem:
                            title = title_elem.get_text().strip()
                            if title and len(title) > 10:
                                news_items.append({
                                    'title': title,
                                    'source': '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
                                    'date': datetime.now().strftime('%Y-%m-%d')
                                })
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è {query}: {e}")
                continue
        
        return news_items
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return []

def generate_ai_content(category, trimester, count):
    """–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –ò–ò-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –∏ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç—Å–∫–∏–º —Å—Ç–∏–ª–µ–º"""
    
    # –ë–æ–≥–∞—Ç—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    templates = {
        'sport': {
            'titles': [
                'üèÉ‚Äç‚ôÄÔ∏è –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ',
                'üí™ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –≥–∏–º–Ω–∞—Å—Ç–∏–∫–∞ –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∞–º: –∫–æ–º–ø–ª–µ–∫—Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π',
                'üßò‚Äç‚ôÄÔ∏è –ô–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä - —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –ø–æ–∑—ã',
                'ü´Å –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ä–æ–¥–∞–º',
                'üèä‚Äç‚ôÄÔ∏è –ê–∫–≤–∞–∞—ç—Ä–æ–±–∏–∫–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤ –≤–æ–¥–µ',
                'üö∂‚Äç‚ôÄÔ∏è –ü—Ä–æ–≥—É–ª–∫–∏ –∏ —Ö–æ–¥—å–±–∞ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
                'ü§∏‚Äç‚ôÄÔ∏è –†–∞—Å—Ç—è–∂–∫–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –≥–∏–±–∫–æ—Å—Ç—å –∏ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ'
            ],
            'images': [
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=800&h=600&fit=crop'
            ],
            'content': [
                '''# üèÉ‚Äç‚ôÄÔ∏è –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ

![–ë–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∂–µ–Ω—â–∏–Ω–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –π–æ–≥–æ–π](https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop)

–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å - —ç—Ç–æ –æ—Å–æ–±–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞, –Ω–æ –∏ **–∫—Ä–∞–π–Ω–µ –ø–æ–ª–µ–∑–Ω–∞**. –í {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ –≤–∞—à –æ—Ä–≥–∞–Ω–∏–∑–º –ø—Ä–µ—Ç–µ—Ä–ø–µ–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –≤–∞–º —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ, –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ä–æ–¥–∞–º –∏ –±—ã—Å—Ç—Ä–µ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∏—Ö.

---

## üéØ –ü–æ—á–µ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤–∞–∂–Ω—ã –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏?

–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤:

### ‚úÖ **–£–ª—É—á—à–µ–Ω–∏–µ –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏—è**
–°–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –æ—Ç–µ–∫–æ–≤ –∏ –≤–∞—Ä–∏–∫–æ–∑–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–µ–Ω, —É–ª—É—á—à–∞–µ—Ç —Å–Ω–∞–±–∂–µ–Ω–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º –º–∞–ª—ã—à–∞.

### üí™ **–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º—ã—à—Ü**
–û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã –º—ã—à—Ü—ã —Ç–∞–∑–æ–≤–æ–≥–æ –¥–Ω–∞ –∏ –±—Ä—é—à–Ω–æ–≥–æ –ø—Ä–µ—Å—Å–∞ - –æ–Ω–∏ –∏–≥—Ä–∞—é—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –≤ —Ä–æ–¥–∞—Ö.

### ‚öñÔ∏è **–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞**
–ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –Ω–∞–±–æ—Ä –≤–µ—Å–∞ –∏ –±—ã—Å—Ç—Ä–µ–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ñ–æ—Ä–º–µ –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤.

### üòä **–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è**
–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —ç–Ω–¥–æ—Ä—Ñ–∏–Ω–æ–≤ - –≥–æ—Ä–º–æ–Ω–æ–≤ —Å—á–∞—Å—Ç—å—è.

### üë∂ **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º**
–£–∫—Ä–µ–ø–ª—è–µ—Ç –º—ã—à—Ü—ã, —É—á–∞—Å—Ç–≤—É—é—â–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–æ–¥–æ–≤, —É–ª—É—á—à–∞–µ—Ç –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å.

---

## ‚ö†Ô∏è –ú–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏

![–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –≤—Ä–∞—á–æ–º](https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop)

**–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ª—é–±—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º.** –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å:

- üö® **–£–≥—Ä–æ–∑–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏**
- üíß **–ú–Ω–æ–≥–æ–≤–æ–¥–∏–µ –∏–ª–∏ –º–∞–ª–æ–≤–æ–¥–∏–µ**
- üìç **–ü—Ä–µ–¥–ª–µ–∂–∞–Ω–∏–µ –ø–ª–∞—Ü–µ–Ω—Ç—ã**
- üè• **–õ—é–±—ã–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è**

---

## üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞

### 1. ü´Å –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

![–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è](https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=800&h=600&fit=crop)

–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ - **–æ—Å–Ω–æ–≤–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ä–æ–¥–∞–º**. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ —ç—Ç–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ:

#### **–î–∏–∞—Ñ—Ä–∞–≥–º–∞–ª—å–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ:**
1. –°—è–¥—å—Ç–µ —É–¥–æ–±–Ω–æ, –ø–æ–ª–æ–∂–∏—Ç–µ —Ä—É–∫–∏ –Ω–∞ –∂–∏–≤–æ—Ç
2. –í–¥–æ—Ö–Ω–∏—Ç–µ –≥–ª—É–±–æ–∫–æ —á–µ—Ä–µ–∑ –Ω–æ—Å, –ø–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –∂–∏–≤–æ—Ç
3. –í—ã–¥–æ—Ö–Ω–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ —Ä–æ—Ç
4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 10-15 —Ä–∞–∑

#### **–¢–µ—Ö–Ω–∏–∫–∞ "4-7-8":**
1. –í–¥–æ—Ö–Ω–∏—Ç–µ –Ω–∞ 4 —Å—á–µ—Ç–∞
2. –ó–∞–¥–µ—Ä–∂–∏—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ 7 —Å—á–µ—Ç–æ–≤
3. –í—ã–¥–æ—Ö–Ω–∏—Ç–µ –Ω–∞ 8 —Å—á–µ—Ç–æ–≤
4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 5-10 —Ä–∞–∑

### 2. üí™ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ö–µ–≥–µ–ª—è

–≠—Ç–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —É–∫—Ä–µ–ø–ª—è—é—Ç **–º—ã—à—Ü—ã —Ç–∞–∑–æ–≤–æ–≥–æ –¥–Ω–∞**:

- –°–æ–∂–º–∏—Ç–µ –º—ã—à—Ü—ã —Ç–∞–∑–æ–≤–æ–≥–æ –¥–Ω–∞ (–∫–∞–∫ –±—É–¥—Ç–æ —Å–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –º–æ—á–µ–∏—Å–ø—É—Å–∫–∞–Ω–∏–µ)
- –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥
- –†–∞—Å—Å–ª–∞–±—å—Ç–µ—Å—å –Ω–∞ 5 —Å–µ–∫—É–Ω–¥
- –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 10-15 —Ä–∞–∑, 3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å

### 3. üê± –ü–æ–∑–∞ –∫–æ—à–∫–∏-–∫–æ—Ä–æ–≤—ã

![–ü–æ–∑–∞ –∫–æ—à–∫–∏-–∫–æ—Ä–æ–≤—ã](https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop)

–û—Ç–ª–∏—á–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª—è —Å–ø–∏–Ω—ã:

1. –í—Å—Ç–∞–Ω—å—Ç–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–µ–Ω—å–∫–∏
2. –ù–∞ –≤–¥–æ—Ö–µ –ø—Ä–æ–≥–Ω–∏—Ç–µ —Å–ø–∏–Ω—É, –ø–æ–¥–Ω—è–≤ –≥–æ–ª–æ–≤—É –∏ –∫–æ–ø—á–∏–∫
3. –ù–∞ –≤—ã–¥–æ—Ö–µ –æ–∫—Ä—É–≥–ª–∏—Ç–µ —Å–ø–∏–Ω—É, –æ–ø—É—Å—Ç–∏–≤ –≥–æ–ª–æ–≤—É
4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 10-15 —Ä–∞–∑

---

## üìã –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

### **–î–µ–Ω—å 1-2:**
- üö∂‚Äç‚ôÄÔ∏è **–†–∞–∑–º–∏–Ω–∫–∞:** 5-10 –º–∏–Ω—É—Ç –ª–µ–≥–∫–æ–π —Ö–æ–¥—å–±—ã
- ü´Å **–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:** –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è + —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ö–µ–≥–µ–ª—è
- ü§∏‚Äç‚ôÄÔ∏è **–ó–∞–º–∏–Ω–∫–∞:** —Ä–∞—Å—Ç—è–∂–∫–∞

### **–î–µ–Ω—å 3-4:**
- üö∂‚Äç‚ôÄÔ∏è **–†–∞–∑–º–∏–Ω–∫–∞:** 5-10 –º–∏–Ω—É—Ç –ª–µ–≥–∫–æ–π —Ö–æ–¥—å–±—ã
- üê± **–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:** –ø–æ–∑–∞ –∫–æ—à–∫–∏-–∫–æ—Ä–æ–≤—ã + —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä—É–∫
- üòå **–ó–∞–º–∏–Ω–∫–∞:** —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ

### **–î–µ–Ω—å 5-7:**
- üõå **–û—Ç–¥—ã—Ö –∏–ª–∏ –ª–µ–≥–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞**

---

## üö® –ö–æ–≥–¥–∞ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

**–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É**, –µ—Å–ª–∏ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ:

- üò∞ **–ë–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ –∏–ª–∏ —Ç–∞–∑—É**
- üí´ **–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏–ª–∏ —Ç–æ—à–Ω–æ—Ç—É**
- ü©∏ **–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ**
- ü§∞ **–°—Ö–≤–∞—Ç–∫–∏**
- üòÆ‚Äçüí® **–û–¥—ã—à–∫—É**

---

## üí° –°–æ–≤–µ—Ç—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

![–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ–π](https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop)

1. **üéß –°–ª—É—à–∞–π—Ç–µ —Å–≤–æ–µ —Ç–µ–ª–æ** - –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
2. **‚ùÑÔ∏è –ù–µ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞–π—Ç–µ—Å—å** - –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å –≤ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏
3. **üíß –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã** - –¥–æ, –≤–æ –≤—Ä–µ–º—è –∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
4. **üëï –ù–æ—Å–∏—Ç–µ —É–¥–æ–±–Ω—É—é –æ–¥–µ–∂–¥—É** - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –æ–¥–µ–∂–¥—É –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
5. **üìÖ –ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ** - –ª—É—á—à–µ 15 –º–∏–Ω—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á–µ–º 2 —á–∞—Å–∞ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é

---

## üéØ –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

–ü—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏—è—Ö –≤—ã –∑–∞–º–µ—Ç–∏—Ç–µ:

- üòä **–£–ª—É—á—à–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è**
- üíÜ‚Äç‚ôÄÔ∏è **–°–Ω–∏–∂–µ–Ω–∏–µ –±–æ–ª–µ–π –≤ —Å–ø–∏–Ω–µ**
- ü´Å **–õ—É—á—à–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –¥—ã—Ö–∞–Ω–∏—è**
- ‚ö° **–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏**
- üò¥ **–£–ª—É—á—à–µ–Ω–∏–µ —Å–Ω–∞**

---

> **üí° –ü–æ–º–Ω–∏—Ç–µ:** –ö–∞–∂–¥–∞—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–∞. –¢–æ, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –æ–¥–Ω–æ–π –∂–µ–Ω—â–∏–Ω–µ, –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–æ–π—Ç–∏ –¥—Ä—É–≥–æ–π. –í—Å–µ–≥–¥–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –∏ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏.*'''
            ]
        },
        'nutrition': {
            'titles': [
                'ü•ó –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ',
                'üçé –í–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã: —á—Ç–æ –Ω—É–∂–Ω–æ –±—É–¥—É—â–µ–π –º–∞–º–µ',
                'ü•© –ë–µ–ª–∫–∏ –≤ —Ä–∞—Ü–∏–æ–Ω–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ–π: –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –Ω–æ—Ä–º—ã',
                'ü•ë –ü–æ–ª–µ–∑–Ω—ã–µ –∂–∏—Ä—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–æ–∑–≥–∞ –º–∞–ª—ã—à–∞',
                'üåæ –°–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã: —ç–Ω–µ—Ä–≥–∏—è –¥–ª—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞',
                'üíß –ü–∏—Ç—å–µ–≤–æ–π —Ä–µ–∂–∏–º –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏',
                'üçΩÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö'
            ],
            'images': [
                'https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&h=600&fit=crop'
            ],
            'content': [
                '''# ü•ó –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ

![–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö](https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&h=600&fit=crop)

–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ - **–æ—Å–Ω–æ–≤–∞ –∑–¥–æ—Ä–æ–≤—å—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞**. –í {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –º–µ–Ω—è—é—Ç—Å—è, –∏ –≤–∞–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞.

---

## üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–∏—Ç–∞–Ω–∏—è

### ‚úÖ **–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å**
–†–∞—Ü–∏–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–µ–ª–∫–∏, –∂–∏—Ä—ã, —É–≥–ª–µ–≤–æ–¥—ã, –≤–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏—è—Ö.

### üçé **–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ**
–í–∫–ª—é—á–∞–π—Ç–µ –≤ –º–µ–Ω—é —Ä–∞–∑–Ω—ã–µ –≥—Ä—É–ø–ø—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –≤–µ—â–µ—Å—Ç–≤.

### ‚è∞ **–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å**
–ü–∏—Ç–∞–π—Ç–µ—Å—å 5-6 —Ä–∞–∑ –≤ –¥–µ–Ω—å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –ø–æ—Ä—Ü–∏—è–º–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —É—Å–≤–æ–µ–Ω–∏—è.

### üíß **–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –ø–∏—Ç—å–µ**
–í—ã–ø–∏–≤–∞–π—Ç–µ 2-2.5 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –≤ –¥–µ–Ω—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤.

---

## ü•© –ë–µ–ª–∫–∏: —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª

![–ë–µ–ª–∫–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã](https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&h=600&fit=crop)

**–ë–µ–ª–∫–∏** - –æ—Å–Ω–æ–≤–∞ –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è –º–∞–ª—ã—à–∞. –í –¥–µ–Ω—å –Ω—É–∂–Ω–æ –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å 1.5-2 –≥ –±–µ–ª–∫–∞ –Ω–∞ –∫–≥ –≤–µ—Å–∞.

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –±–µ–ª–∫–∞:**
- ü•© **–ú—è—Å–æ:** –≥–æ–≤—è–¥–∏–Ω–∞, —Ç–µ–ª—è—Ç–∏–Ω–∞, –∏–Ω–¥–µ–π–∫–∞, –∫—É—Ä–∏—Ü–∞
- üêü **–†—ã–±–∞:** –ª–æ—Å–æ—Å—å, —Ç—Ä–µ—Å–∫–∞, –º–∏–Ω—Ç–∞–π, —Å–µ–ª—å–¥—å
- ü•ö **–Ø–π—Ü–∞:** 1-2 —è–π—Ü–∞ –≤ –¥–µ–Ω—å
- ü•õ **–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:** —Ç–≤–æ—Ä–æ–≥, –π–æ–≥—É—Ä—Ç, –∫–µ—Ñ–∏—Ä
- ü´ò **–ë–æ–±–æ–≤—ã–µ:** —Ñ–∞—Å–æ–ª—å, —á–µ—á–µ–≤–∏—Ü–∞, –≥–æ—Ä–æ—Ö

---

## ü•ë –ü–æ–ª–µ–∑–Ω—ã–µ –∂–∏—Ä—ã

**–ñ–∏—Ä—ã** –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–æ–∑–≥–∞ –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–∞–ª—ã—à–∞.

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –∂–∏—Ä–æ–≤:**
- ü•ë **–ê–≤–æ–∫–∞–¥–æ:** —Å–æ–¥–µ—Ä–∂–∏—Ç –º–æ–Ω–æ–Ω–µ–Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ –∂–∏—Ä—ã
- ü•ú **–û—Ä–µ—Ö–∏:** –≥—Ä–µ—Ü–∫–∏–µ, –º–∏–Ω–¥–∞–ª—å, –∫–µ—à—å—é
- ü´í **–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ:** –¥–ª—è –∑–∞–ø—Ä–∞–≤–∫–∏ —Å–∞–ª–∞—Ç–æ–≤
- üêü **–ñ–∏—Ä–Ω–∞—è —Ä—ã–±–∞:** –ª–æ—Å–æ—Å—å, —Å–∫—É–º–±—Ä–∏—è, —Å–∞—Ä–¥–∏–Ω—ã

---

## üåæ –°–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã

![–£–≥–ª–µ–≤–æ–¥—ã –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏](https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&h=600&fit=crop)

**–°–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã** –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —ç–Ω–µ—Ä–≥–∏—é –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç —Ä–µ–∑–∫–∏–µ —Å–∫–∞—á–∫–∏ —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏.

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤:**
- üçû **–¶–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–±**
- üçö **–ö—Ä—É–ø—ã:** –≥—Ä–µ—á–∫–∞, –æ–≤—Å—è–Ω–∫–∞, –±—É—Ä—ã–π —Ä–∏—Å
- ü•î **–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å** (–≤ —É–º–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö)
- ü•ï **–û–≤–æ—â–∏:** –º–æ—Ä–∫–æ–≤—å, —Å–≤–µ–∫–ª–∞, —Ç—ã–∫–≤–∞

---

## üçé –í–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã

### **–í–∏—Ç–∞–º–∏–Ω C**
–£–∫—Ä–µ–ø–ª—è–µ—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç, –ø–æ–º–æ–≥–∞–µ—Ç —É—Å–≤–æ–µ–Ω–∏—é –∂–µ–ª–µ–∑–∞.
**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** —Ü–∏—Ç—Ä—É—Å–æ–≤—ã–µ, –±–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü, –±—Ä–æ–∫–∫–æ–ª–∏

### **–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞**
–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.
**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** –∑–µ–ª–µ–Ω—å, –±–æ–±–æ–≤—ã–µ, –æ—Ä–µ—Ö–∏

### **–ñ–µ–ª–µ–∑–æ**
–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∞–Ω–µ–º–∏—é.
**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** –∫—Ä–∞—Å–Ω–æ–µ –º—è—Å–æ, –ø–µ—á–µ–Ω—å, —à–ø–∏–Ω–∞—Ç

### **–ö–∞–ª—å—Ü–∏–π**
–î–ª—è –∫—Ä–µ–ø–∫–∏—Ö –∫–æ—Å—Ç–µ–π –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞.
**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫—É–Ω–∂—É—Ç, –º–∏–Ω–¥–∞–ª—å

---

## üö´ –ß—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∏–ª–∏ –∏—Å–∫–ª—é—á–∏—Ç—å

### **–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å:**
- ‚òï **–ö–æ—Ñ–µ–∏–Ω:** –Ω–µ –±–æ–ª–µ–µ 200 –º–≥ –≤ –¥–µ–Ω—å
- üç∞ **–°–ª–∞–¥–æ—Å—Ç–∏:** —Å–∞—Ö–∞—Ä, –∫–æ–Ω—Ñ–µ—Ç—ã, –≤—ã–ø–µ—á–∫–∞
- üçü **–ñ–∞—Ä–µ–Ω–æ–µ:** —Ñ–∞—Å—Ç—Ñ—É–¥, –∂–∞—Ä–µ–Ω—ã–µ –±–ª—é–¥–∞
- üßÇ **–°–æ–ª—å:** –Ω–µ –±–æ–ª–µ–µ 5 –≥ –≤ –¥–µ–Ω—å

### **–ò—Å–∫–ª—é—á–∏—Ç—å:**
- üç∑ **–ê–ª–∫–æ–≥–æ–ª—å:** –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–∫–ª—é—á–∏—Ç—å
- üö¨ **–ö—É—Ä–µ–Ω–∏–µ:** –ø–∞—Å—Å–∏–≤–Ω–æ–µ –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ
- ü•© **–°—ã—Ä–æ–µ –º—è—Å–æ:** —Å—É—à–∏, —Ç–∞—Ä—Ç–∞—Ä, —Å—Ç–µ–π–∫–∏ —Å –∫—Ä–æ–≤—å—é
- ü•õ **–ù–µ–ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:** —Å—ã—Ä—ã–µ —è–π—Ü–∞, –Ω–µ–ø–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –º–æ–ª–æ–∫–æ

---

## üìã –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å

### **–ó–∞–≤—Ç—Ä–∞–∫:**
- ü•£ –û–≤—Å—è–Ω–∞—è –∫–∞—à–∞ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏
- ü•õ –°—Ç–∞–∫–∞–Ω –º–æ–ª–æ–∫–∞ –∏–ª–∏ –π–æ–≥—É—Ä—Ç–∞
- üçé –Ø–±–ª–æ–∫–æ –∏–ª–∏ –±–∞–Ω–∞–Ω

### **–í—Ç–æ—Ä–æ–π –∑–∞–≤—Ç—Ä–∞–∫:**
- ü•™ –ë—É—Ç–µ—Ä–±—Ä–æ–¥ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ –∑–µ–ª–µ–Ω—å—é
- ü•õ –ß–∞–π –∏–ª–∏ –∫–æ–º–ø–æ—Ç

### **–û–±–µ–¥:**
- ü•© –°—É–ø —Å –º—è—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏
- üçö –ì—Ä–µ—á–∫–∞ —Å –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–æ–π
- ü•ó –°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π
- ü•ñ –•–ª–µ–±

### **–ü–æ–ª–¥–Ω–∏–∫:**
- ü•õ –¢–≤–æ—Ä–æ–≥ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏
- ü•ú –ì–æ—Ä—Å—Ç—å –æ—Ä–µ—Ö–æ–≤

### **–£–∂–∏–Ω:**
- üêü –ó–∞–ø–µ—á–µ–Ω–Ω–∞—è —Ä—ã–±–∞ —Å –æ–≤–æ—â–∞–º–∏
- üçö –ë—É—Ä—ã–π —Ä–∏—Å
- ü•ó –°–∞–ª–∞—Ç

### **–ü–µ—Ä–µ–¥ —Å–Ω–æ–º:**
- ü•õ –°—Ç–∞–∫–∞–Ω –∫–µ—Ñ–∏—Ä–∞ –∏–ª–∏ –π–æ–≥—É—Ä—Ç–∞

---

## üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é

![–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è](https://images.unsplash.com/photo-1512621776951-a57141f2eefd?w=800&h=600&fit=crop)

1. **üìù –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è** - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —á—Ç–æ –∏ –∫–æ–≥–¥–∞ –µ–¥–∏—Ç–µ
2. **üõí –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫–∏** - —Å–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—é
3. **üë®‚Äçüç≥ –ì–æ—Ç–æ–≤—å—Ç–µ –¥–æ–º–∞** - —Ç–∞–∫ –≤—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å–æ—Å—Ç–∞–≤ –±–ª—é–¥
4. **üçΩÔ∏è –ï—à—å—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ** - —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∂–µ–≤—ã–≤–∞–π—Ç–µ –ø–∏—â—É
5. **üö∞ –ü–µ–π—Ç–µ –≤–æ–¥—É** - –º–µ–∂–¥—É –ø—Ä–∏–µ–º–∞–º–∏ –ø–∏—â–∏

---

## üö® –ö–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É

**–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É**, –µ—Å–ª–∏:

- ü§¢ **–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ç–æ—à–Ω–æ—Ç–∞ –∏ —Ä–≤–æ—Ç–∞**
- üçΩÔ∏è **–ü–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è –∞–ø–ø–µ—Ç–∏—Ç–∞**
- üíß **–°–∏–ª—å–Ω–∞—è –∂–∞–∂–¥–∞ –∏ —á–∞—Å—Ç–æ–µ –º–æ—á–µ–∏—Å–ø—É—Å–∫–∞–Ω–∏–µ**
- ü©∏ **–ö—Ä–æ–≤—å –≤ —Å—Ç—É–ª–µ**
- üò∞ **–°–∏–ª—å–Ω—ã–µ –±–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ**

---

> **üí° –ü–æ–º–Ω–∏—Ç–µ:** –ö–∞–∂–¥–∞—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–∞. –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama –¥–ª—è –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏.*'''
            ]
        },
        'vitamins': {
            'titles': [
                'üíä –í–∏—Ç–∞–º–∏–Ω—ã –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –ø–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä—É',
                'ü•¨ –§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞: –∑–∞—á–µ–º –æ–Ω–∞ –Ω—É–∂–Ω–∞ –±—É–¥—É—â–µ–π –º–∞–º–µ',
                'üåû –í–∏—Ç–∞–º–∏–Ω D: —Å–æ–ª–Ω–µ—á–Ω—ã–π –≤–∏—Ç–∞–º–∏–Ω –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞',
                'ü©∏ –ñ–µ–ª–µ–∑–æ: –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∞–Ω–µ–º–∏–∏ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏',
                'ü¶∑ –ö–∞–ª—å—Ü–∏–π: –∫—Ä–µ–ø–∫–∏–µ –∫–æ—Å—Ç–∏ –¥–ª—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞',
                'üß† –û–º–µ–≥–∞-3: —Ä–∞–∑–≤–∏—Ç–∏–µ –º–æ–∑–≥–∞ –∏ –∑—Ä–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞',
                'üí™ –í–∏—Ç–∞–º–∏–Ω–Ω–æ-–º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã: –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å'
            ],
            'images': [
                'https://images.unsplash.com/photo-1584308666744-24d5c474f2ae?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1584308666744-24d5c474f2ae?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop'
            ],
            'content': [
                '''# üíä –í–∏—Ç–∞–º–∏–Ω—ã –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –ø–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä—É

![–í–∏—Ç–∞–º–∏–Ω—ã –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö](https://images.unsplash.com/photo-1584308666744-24d5c474f2ae?w=800&h=600&fit=crop)

–í–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã –∏–≥—Ä–∞—é—Ç **–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—É—é —Ä–æ–ª—å** –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. –í {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –º–µ–Ω—è—é—Ç—Å—è, –∏ –≤–∞–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –º–∞–º—ã –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –º–∞–ª—ã—à–∞.

---

## üéØ –ü–æ—á–µ–º—É –≤–∏—Ç–∞–º–∏–Ω—ã —Ç–∞–∫ –≤–∞–∂–Ω—ã?

### ‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–ª–æ–¥–∞**
–í–∏—Ç–∞–º–∏–Ω—ã —É—á–∞—Å—Ç–≤—É—é—Ç –≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–æ–≤ –∏ —Å–∏—Å—Ç–µ–º –º–∞–ª—ã—à–∞.

### üõ°Ô∏è **–ó–∞—â–∏—Ç–∞ –∑–¥–æ—Ä–æ–≤—å—è –º–∞–º—ã**
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –æ—Å–ª–æ–∂–Ω–µ–Ω–∏—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏.

### üí™ **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º**
–£–∫—Ä–µ–ø–ª—è—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–º –∏ –ø–æ–º–æ–≥–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤.

---

## ü•¨ –§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (–í–∏—Ç–∞–º–∏–Ω B9)

![–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞](https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop)

**–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞** - —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –≤–∏—Ç–∞–º–∏–Ω –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

### **–†–æ–ª—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ:**
- üß† **–†–∞–∑–≤–∏—Ç–∏–µ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã** –ø–ª–æ–¥–∞
- ü©∏ **–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Å–Ω—ã—Ö –∫—Ä–æ–≤—è–Ω—ã—Ö —Ç–µ–ª–µ—Ü**
- üß¨ **–°–∏–Ω—Ç–µ–∑ –î–ù–ö** –∏ –¥–µ–ª–µ–Ω–∏–µ –∫–ª–µ—Ç–æ–∫

### **–ù–æ—Ä–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:**
- üìä **400-800 –º–∫–≥** –≤ –¥–µ–Ω—å
- üìä **–ù–∞—á–∏–Ω–∞—Ç—å –ø—Ä–∏–µ–º** –∑–∞ 3 –º–µ—Å—è—Ü–∞ –¥–æ –∑–∞—á–∞—Ç–∏—è
- üìä **–ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å** –≤–µ—Å—å –ø–µ—Ä–≤—ã–π —Ç—Ä–∏–º–µ—Å—Ç—Ä

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
- ü•¨ **–ó–µ–ª–µ–Ω—å:** —à–ø–∏–Ω–∞—Ç, —Å–∞–ª–∞—Ç, –ø–µ—Ç—Ä—É—à–∫–∞
- ü´ò **–ë–æ–±–æ–≤—ã–µ:** —Ñ–∞—Å–æ–ª—å, —á–µ—á–µ–≤–∏—Ü–∞, –≥–æ—Ä–æ—Ö
- ü•ú **–û—Ä–µ—Ö–∏:** –≥—Ä–µ—Ü–∫–∏–µ, –º–∏–Ω–¥–∞–ª—å
- üçä **–¶–∏—Ç—Ä—É—Å–æ–≤—ã–µ:** –∞–ø–µ–ª—å—Å–∏–Ω—ã, –ª–∏–º–æ–Ω—ã

---

## üåû –í–∏—Ç–∞–º–∏–Ω D

**–í–∏—Ç–∞–º–∏–Ω D** –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∫—Ä–µ–ø–∫–∏—Ö –∫–æ—Å—Ç–µ–π –∏ –∑—É–±–æ–≤.

### **–†–æ–ª—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ:**
- ü¶∑ **–£—Å–≤–æ–µ–Ω–∏–µ –∫–∞–ª—å—Ü–∏—è** –∏ —Ñ–æ—Å—Ñ–æ—Ä–∞
- ü¶¥ **–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ—Å—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã** –º–∞–ª—ã—à–∞
- üõ°Ô∏è **–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞**

### **–ù–æ—Ä–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:**
- üìä **600-800 –ú–ï** –≤ –¥–µ–Ω—å
- üìä **–£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–∑—É** –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å–æ–ª–Ω—Ü–∞

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
- ‚òÄÔ∏è **–°–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç** - 15-20 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å
- üêü **–ñ–∏—Ä–Ω–∞—è —Ä—ã–±–∞:** –ª–æ—Å–æ—Å—å, —Å–∫—É–º–±—Ä–∏—è, —Å–∞—Ä–¥–∏–Ω—ã
- ü•õ **–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:** –º–æ–ª–æ–∫–æ, –π–æ–≥—É—Ä—Ç, —Å—ã—Ä
- ü•ö **–Ø–∏—á–Ω—ã–µ –∂–µ–ª—Ç–∫–∏**

---

## ü©∏ –ñ–µ–ª–µ–∑–æ

**–ñ–µ–ª–µ–∑–æ** –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∞–Ω–µ–º–∏—é –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º –º–∞–ª—ã—à–∞.

### **–†–æ–ª—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ:**
- ü©∏ **–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞**
- üí® **–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∫–∏—Å–ª–æ—Ä–æ–¥–∞** –∫ —Ç–∫–∞–Ω—è–º
- üß† **–†–∞–∑–≤–∏—Ç–∏–µ –º–æ–∑–≥–∞** –ø–ª–æ–¥–∞

### **–ù–æ—Ä–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:**
- üìä **27 –º–≥** –≤ –¥–µ–Ω—å
- üìä **–£–≤–µ–ª–∏—á–∏—Ç—å** –ø—Ä–∏ –∞–Ω–µ–º–∏–∏

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
- ü•© **–ö—Ä–∞—Å–Ω–æ–µ –º—è—Å–æ:** –≥–æ–≤—è–¥–∏–Ω–∞, –±–∞—Ä–∞–Ω–∏–Ω–∞
- üêü **–†—ã–±–∞:** —Ç—É–Ω–µ—Ü, –ª–æ—Å–æ—Å—å
- ü•¨ **–ó–µ–ª–µ–Ω—å:** —à–ø–∏–Ω–∞—Ç, –±—Ä–æ–∫–∫–æ–ª–∏
- ü´ò **–ë–æ–±–æ–≤—ã–µ:** —Ñ–∞—Å–æ–ª—å, —á–µ—á–µ–≤–∏—Ü–∞

---

## ü¶∑ –ö–∞–ª—å—Ü–∏–π

**–ö–∞–ª—å—Ü–∏–π** –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∫—Ä–µ–ø–∫–∏—Ö –∫–æ—Å—Ç–µ–π –∏ –∑—É–±–æ–≤.

### **–†–æ–ª—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ:**
- ü¶¥ **–†–∞–∑–≤–∏—Ç–∏–µ –∫–æ—Å—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã** –º–∞–ª—ã—à–∞
- ü¶∑ **–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑—É–±–æ–≤**
- üí™ **–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –º—ã—à—Ü**

### **–ù–æ—Ä–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:**
- üìä **1000-1300 –º–≥** –≤ –¥–µ–Ω—å
- üìä **–£–≤–µ–ª–∏—á–∏—Ç—å** –≤ —Ç—Ä–µ—Ç—å–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
- ü•õ **–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:** –º–æ–ª–æ–∫–æ, –π–æ–≥—É—Ä—Ç, —Ç–≤–æ—Ä–æ–≥
- üßÄ **–°—ã—Ä:** —Ç–≤–µ—Ä–¥—ã–µ —Å–æ—Ä—Ç–∞
- ü•¨ **–ó–µ–ª–µ–Ω—å:** –∫–∞–ø—É—Å—Ç–∞, –±—Ä–æ–∫–∫–æ–ª–∏
- ü•ú **–û—Ä–µ—Ö–∏:** –º–∏–Ω–¥–∞–ª—å, –∫–µ—à—å—é

---

## üß† –û–º–µ–≥–∞-3 –∂–∏—Ä–Ω—ã–µ –∫–∏—Å–ª–æ—Ç—ã

**–û–º–µ–≥–∞-3** –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–æ–∑–≥–∞ –∏ –∑—Ä–µ–Ω–∏—è.

### **–†–æ–ª—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ:**
- üß† **–†–∞–∑–≤–∏—Ç–∏–µ –º–æ–∑–≥–∞** –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
- üëÅÔ∏è **–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑—Ä–µ–Ω–∏—è**
- üõ°Ô∏è **–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞**

### **–ù–æ—Ä–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è:**
- üìä **200-300 –º–≥** DHA –≤ –¥–µ–Ω—å
- üìä **–û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ** –≤ —Ç—Ä–µ—Ç—å–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ

### **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
- üêü **–ñ–∏—Ä–Ω–∞—è —Ä—ã–±–∞:** –ª–æ—Å–æ—Å—å, —Å–∫—É–º–±—Ä–∏—è, —Å–∞—Ä–¥–∏–Ω—ã
- ü•ú **–û—Ä–µ—Ö–∏:** –≥—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏
- ü•ë **–ê–≤–æ–∫–∞–¥–æ**
- ü´í **–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ**

---

## üíä –í–∏—Ç–∞–º–∏–Ω–Ω–æ-–º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã

![–í–∏—Ç–∞–º–∏–Ω–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã](https://images.unsplash.com/photo-1584308666744-24d5c474f2ae?w=800&h=600&fit=crop)

### **–ö–æ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å:**
- ‚úÖ **–ü—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏**
- ‚úÖ **–í–µ—Å—å –ø–µ—Ä–≤—ã–π —Ç—Ä–∏–º–µ—Å—Ç—Ä**
- ‚úÖ **–ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –≤–∏—Ç–∞–º–∏–Ω–æ–≤**
- ‚úÖ **–ü–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Ä–∞—á–∞**

### **–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å:**
- üè• **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –≤—Ä–∞—á–æ–º** - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
- üìä **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ–ª–∏–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã** - 400-800 –º–∫–≥
- ü©∏ **–ñ–µ–ª–µ–∑–æ** - 27 –º–≥
- ü¶∑ **–ö–∞–ª—å—Ü–∏–π** - 1000-1300 –º–≥

---

## üö´ –ß—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å

### **–í–∏—Ç–∞–º–∏–Ω A:**
- ‚ö†Ô∏è **–ù–µ –±–æ–ª–µ–µ 3000 –ú–ï** –≤ –¥–µ–Ω—å
- ‚ö†Ô∏è **–ò–∑–±–µ–≥–∞—Ç—å** –≤—ã—Å–æ–∫–∏—Ö –¥–æ–∑ —Ä–µ—Ç–∏–Ω–æ–ª–∞
- ‚ö†Ô∏è **–ë–µ–∑–æ–ø–∞—Å–µ–Ω** –±–µ—Ç–∞-–∫–∞—Ä–æ—Ç–∏–Ω –∏–∑ –æ–≤–æ—â–µ–π

### **–í–∏—Ç–∞–º–∏–Ω E:**
- ‚ö†Ô∏è **–ù–µ –±–æ–ª–µ–µ 15 –º–≥** –≤ –¥–µ–Ω—å
- ‚ö†Ô∏è **–ò–∑–±–µ–≥–∞—Ç—å** –≤—ã—Å–æ–∫–∏—Ö –¥–æ–∑

---

## üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–∏–µ–º—É –≤–∏—Ç–∞–º–∏–Ω–æ–≤

![–ü—Ä–∏–µ–º –≤–∏—Ç–∞–º–∏–Ω–æ–≤](https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop)

1. **‚è∞ –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è** - –ª—É—á—à–µ —É—Ç—Ä–æ–º –ø–æ—Å–ª–µ –µ–¥—ã
2. **üíß –ó–∞–ø–∏–≤–∞–π—Ç–µ –≤–æ–¥–æ–π** - –Ω–µ —á–∞–µ–º –∏–ª–∏ –∫–æ—Ñ–µ
3. **üçΩÔ∏è –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Å –µ–¥–æ–π** - –¥–ª—è –ª—É—á—à–µ–≥–æ —É—Å–≤–æ–µ–Ω–∏—è
4. **üìù –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫** - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø—Ä–∏–µ–º –≤–∏—Ç–∞–º–∏–Ω–æ–≤
5. **üè• –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º** - –ø—Ä–∏ –ª—é–±—ã—Ö —Å–æ–º–Ω–µ–Ω–∏—è—Ö

---

## üö® –ö–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É

**–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É**, –µ—Å–ª–∏:

- ü§¢ **–¢–æ—à–Ω–æ—Ç–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–µ–º–∞ –≤–∏—Ç–∞–º–∏–Ω–æ–≤**
- ü©∏ **–ê–ª–ª–µ—Ä–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏**
- üò∞ **–ë–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ**
- üíä **–ü–µ—Ä–µ–¥–æ–∑–∏—Ä–æ–≤–∫–∞ –≤–∏—Ç–∞–º–∏–Ω–æ–≤**

---

## üìã –ü–ª–∞–Ω –ø—Ä–∏–µ–º–∞ –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –ø–æ —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞–º

### **–ü–µ—Ä–≤—ã–π —Ç—Ä–∏–º–µ—Å—Ç—Ä:**
- ü•¨ **–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞** - 400-800 –º–∫–≥
- üåû **–í–∏—Ç–∞–º–∏–Ω D** - 600-800 –ú–ï
- ü©∏ **–ñ–µ–ª–µ–∑–æ** - –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Ä–∞—á–∞

### **–í—Ç–æ—Ä–æ–π —Ç—Ä–∏–º–µ—Å—Ç—Ä:**
- ü¶∑ **–ö–∞–ª—å—Ü–∏–π** - 1000-1300 –º–≥
- üß† **–û–º–µ–≥–∞-3** - 200-300 –º–≥ DHA
- ü©∏ **–ñ–µ–ª–µ–∑–æ** - 27 –º–≥

### **–¢—Ä–µ—Ç–∏–π —Ç—Ä–∏–º–µ—Å—Ç—Ä:**
- ü¶∑ **–ö–∞–ª—å—Ü–∏–π** - —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–∑—É
- üß† **–û–º–µ–≥–∞-3** - –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ
- ü©∏ **–ñ–µ–ª–µ–∑–æ** - –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Ä–æ–≤–Ω—è

---

> **üí° –ü–æ–º–Ω–∏—Ç–µ:** –í–∏—Ç–∞–º–∏–Ω—ã - —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é, –∞ –Ω–µ –∑–∞–º–µ–Ω–∞ –µ–º—É. –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤–µ–¥—É—â–∏—Ö –∞–∫—É—à–µ—Ä–æ–≤-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–æ–≤.*'''
            ]
        },
        'body_care': {
            'titles': [
                'üß¥ –£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏: {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä',
                'ü´ß –†–∞—Å—Ç—è–∂–∫–∏: –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π',
                'üíÜ‚Äç‚ôÄÔ∏è –ú–∞—Å—Å–∞–∂ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –ø—Ä–∏–µ–º—ã',
                'üõÅ –ì–∏–≥–∏–µ–Ω–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ–π: –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
                'üëô –£—Ö–æ–¥ –∑–∞ –≥—Ä—É–¥—å—é: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∫–æ—Ä–º–ª–µ–Ω–∏—é',
                'ü¶∂ –û—Ç–µ–∫–∏ –Ω–æ–≥: –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ø–æ—Å–æ–±—ã –±–æ—Ä—å–±—ã',
                'üíÑ –ö–æ—Å–º–µ—Ç–∏–∫–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: —á—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ'
            ],
            'images': [
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop'
            ],
        },
        'baby_care': {
            'titles': [
                'üë∂ –£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–º: –ø–µ—Ä–≤—ã–µ –¥–Ω–∏ –∂–∏–∑–Ω–∏',
                'üçº –ö–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä—É–¥—å—é: –æ—Å–Ω–æ–≤—ã –∏ —Ç–µ—Ö–Ω–∏–∫–∏',
                'üò¥ –°–æ–Ω –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ: —Ä–µ–∂–∏–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                'üõÅ –ö—É–ø–∞–Ω–∏–µ –º–∞–ª—ã—à–∞: –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
                'üëï –û–¥–µ–∂–¥–∞ –¥–ª—è –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ: –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å',
                'üöº –ü–æ–¥–≥—É–∑–Ω–∏–∫–∏ –∏ –≥–∏–≥–∏–µ–Ω–∞: —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å',
                'üè• –ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –∂–∏–∑–Ω–∏: —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ —É—Ö–æ–¥'
            ],
            'images': [
                'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop'
            ],
                },
        'doctor_advice': {
            'titles': [
                'üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–∞: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ',
                'üè• –ü–æ—Å–µ—â–µ–Ω–∏–µ –≤—Ä–∞—á–∞: —á—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å –Ω–∞ –ø—Ä–∏–µ–º–µ',
                'üìã –ê–Ω–∞–ª–∏–∑—ã –∏ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –≥—Ä–∞—Ñ–∏–∫ –∏ –≤–∞–∂–Ω–æ—Å—Ç—å',
                'üö® –¢—Ä–µ–≤–æ–∂–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã: –∫–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É',
                'üíä –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏: —á—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ',
                'üèÉ‚Äç‚ôÄÔ∏è –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤—Ä–∞—á–∞',
                'üò¥ –û—Ç–¥—ã—Ö –∏ —Å–æ–Ω: —Å–æ–≤–µ—Ç—ã –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö'
            ],
            'images': [
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop',
                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop'
            ],
            'content': [
                '''# üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–∞: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ

![–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –≤—Ä–∞—á–æ–º](https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&h=600&fit=crop)

–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –≤—Ä–∞—á–æ–º –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ - **–æ—Å–Ω–æ–≤–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–Ω–∞—à–∏–≤–∞–Ω–∏—è –º–∞–ª—ã—à–∞**. –í {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–≤–æ–∏–º –∑–¥–æ—Ä–æ–≤—å–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.

---

## üè• –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Å–µ—â–µ–Ω–∏–π –≤—Ä–∞—á–∞

### **{trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä:**
- üìÖ **–î–æ 28 –Ω–µ–¥–µ–ª—å:** –∫–∞–∂–¥—ã–µ 4 –Ω–µ–¥–µ–ª–∏
- üìÖ **28-36 –Ω–µ–¥–µ–ª—å:** –∫–∞–∂–¥—ã–µ 2-3 –Ω–µ–¥–µ–ª–∏  
- üìÖ **–ü–æ—Å–ª–µ 36 –Ω–µ–¥–µ–ª—å:** –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é

---

## üìã –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã –∏ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è

### **–ê–Ω–∞–ª–∏–∑—ã –∫—Ä–æ–≤–∏:**
- ü©∏ **–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏** - –∫–æ–Ω—Ç—Ä–æ–ª—å –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞
- ü©∏ **–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–µ—á–µ–Ω–∏ –∏ –ø–æ—á–µ–∫
- ü©∏ **–ê–Ω–∞–ª–∏–∑ –Ω–∞ —Å–∞—Ö–∞—Ä** - –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Ä–æ–≤–Ω—è –≥–ª—é–∫–æ–∑—ã
- ü©∏ **–ê–Ω–∞–ª–∏–∑ –Ω–∞ –≥—Ä—É–ø–ø—É –∫—Ä–æ–≤–∏ –∏ —Ä–µ–∑—É—Å-—Ñ–∞–∫—Ç–æ—Ä**

### **–£–ó–ò –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:**
- üìä **12-14 –Ω–µ–¥–µ–ª—å** - –ø–µ—Ä–≤—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥
- üìä **18-21 –Ω–µ–¥–µ–ª—è** - –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω–∏–Ω–≥  
- üìä **30-32 –Ω–µ–¥–µ–ª–∏** - —Ç—Ä–µ—Ç–∏–π —Å–∫—Ä–∏–Ω–∏–Ω–≥

---

## üö® –¢—Ä–µ–≤–æ–∂–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã

**–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É**, –µ—Å–ª–∏ –∑–∞–º–µ—Ç–∏—Ç–µ:

### **–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è:**
- ü©∏ **–õ—é–±—ã–µ –∫—Ä–æ–≤—è–Ω–∏—Å—Ç—ã–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è**
- ü©∏ **–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ –∏–∑ –Ω–æ—Å–∞** (–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ)

### **–ë–æ–ª–∏:**
- üò∞ **–°–∏–ª—å–Ω—ã–µ –±–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ**
- üò∞ **–ì–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏** (–æ—Å–æ–±–µ–Ω–Ω–æ —Å —Ç–æ—à–Ω–æ—Ç–æ–π)
- üò∞ **–ë–æ–ª–∏ –≤ –ø–æ—è—Å–Ω–∏—Ü–µ** (–µ—Å–ª–∏ –Ω–æ–≤—ã–µ –∏ —Å–∏–ª—å–Ω—ã–µ)

### **–î—Ä—É–≥–∏–µ —Å–∏–º–ø—Ç–æ–º—ã:**
- ü§¢ **–°–∏–ª—å–Ω–∞—è —Ç–æ—à–Ω–æ—Ç–∞ –∏ —Ä–≤–æ—Ç–∞**
- üíß **–û—Ç–µ–∫–∏ –ª–∏—Ü–∞ –∏ —Ä—É–∫**
- üòÆ‚Äçüí® **–û–¥—ã—à–∫–∞ –≤ –ø–æ–∫–æ–µ**
- üå°Ô∏è **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 37.5¬∞C**

---

## üíä –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏

### **–ß—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ:**
- ‚úÖ **–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª** - –ø—Ä–∏ –≥–æ–ª–æ–≤–Ω–æ–π –±–æ–ª–∏ –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
- ‚úÖ **–í–∏—Ç–∞–º–∏–Ω—ã** - –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –≤—Ä–∞—á–æ–º
- ‚úÖ **–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã –∂–µ–ª–µ–∑–∞** - –ø—Ä–∏ –∞–Ω–µ–º–∏–∏

### **–ß—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:**
- ‚ùå **–ê—Å–ø–∏—Ä–∏–Ω** - –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è
- ‚ùå **–ò–±—É–ø—Ä–æ—Ñ–µ–Ω** - –Ω–µ–±–µ–∑–æ–ø–∞—Å–µ–Ω –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
- ‚ùå **–ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏** - —Ç–æ–ª—å–∫–æ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Ä–∞—á–∞

---

## üèÉ‚Äç‚ôÄÔ∏è –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

### **–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:**
- üö∂‚Äç‚ôÄÔ∏è **–ü—Ä–æ–≥—É–ª–∫–∏** - 30-60 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å
- üßò‚Äç‚ôÄÔ∏è **–ô–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö** - –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
- üèä‚Äç‚ôÄÔ∏è **–ü–ª–∞–≤–∞–Ω–∏–µ** - –æ—Ç–ª–∏—á–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –≤—Ä–µ–¥–∞ –¥–ª—è —Å—É—Å—Ç–∞–≤–æ–≤

### **–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å:**
- ‚ö†Ô∏è **–ë–µ–≥** - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –¥–æ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
- ‚ö†Ô∏è **–ü–æ–¥–Ω—è—Ç–∏–µ —Ç—è–∂–µ—Å—Ç–µ–π** - –Ω–µ –±–æ–ª–µ–µ 5 –∫–≥
- ‚ö†Ô∏è **–ö–æ–Ω–Ω—ã–π —Å–ø–æ—Ä—Ç** - —Ä–∏—Å–∫ –ø–∞–¥–µ–Ω–∏—è

---

## üò¥ –û—Ç–¥—ã—Ö –∏ —Å–æ–Ω

### **–ü—Ä–∞–≤–∏–ª–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ —Å–Ω–∞:**
- üõèÔ∏è **–°–ø–∏—Ç–µ 8-9 —á–∞—Å–æ–≤** –≤ —Å—É—Ç–∫–∏
- üõèÔ∏è **–õ–æ–∂–∏—Ç–µ—Å—å —Å–ø–∞—Ç—å** –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è
- üõèÔ∏è **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥—É—à–∫–∏** –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- üõèÔ∏è **–ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É** –ø–µ—Ä–µ–¥ —Å–Ω–æ–º

### **–î–Ω–µ–≤–Ω–æ–π –æ—Ç–¥—ã—Ö:**
- üòå **–ü—Ä–∏–ª—è–≥—Ç–µ** –Ω–∞ 30-60 –º–∏–Ω—É—Ç –¥–Ω–µ–º
- üòå **–ü–æ–¥–Ω–∏–º–∏—Ç–µ –Ω–æ–≥–∏** –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Ç–µ–∫–æ–≤
- üòå **–°–¥–µ–ª–∞–π—Ç–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è**

---

## üì± –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ–¥–∞–º

### **–ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:**
- üìö **–ò–∑—É—á–∏—Ç–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ä–æ–¥–æ–≤** - —Å—Ö–≤–∞—Ç–∫–∏, –æ—Ç—Ö–æ–∂–¥–µ–Ω–∏–µ –≤–æ–¥
- üìö **–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Å—É–º–∫—É** –≤ —Ä–æ–¥–¥–æ–º
- üìö **–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–¥–¥–æ–º** –∏ –ø–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º
- üìö **–ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è** –¥–ª—è —Ä–æ–¥–æ–≤

### **–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ —Ä–æ–¥—ã:**
- üë´ **–û–±—Å—É–¥–∏—Ç–µ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º** –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö —Ä–æ–¥–æ–≤
- üë´ **–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã** –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
- üë´ **–ò–∑—É—á–∏—Ç–µ —Ä–æ–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞** –≤ —Ä–æ–¥–∞—Ö

---

## üí° –°–æ–≤–µ—Ç—ã –æ—Ç –≤—Ä–∞—á–µ–π

![–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–∞](https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop)

1. **üìù –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏** - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
2. **üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ** –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
3. **üìû –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—Ä–∞—á–∞** –≤ –±—ã—Å—Ç—Ä–æ–º –Ω–∞–±–æ—Ä–µ
4. **üè• –ó–Ω–∞–π—Ç–µ –∞–¥—Ä–µ—Å —Ä–æ–¥–¥–æ–º–∞** –∏ –∫–∞–∫ —Ç—É–¥–∞ –¥–æ–±—Ä–∞—Ç—å—Å—è
5. **üìã –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã** –∑–∞—Ä–∞–Ω–µ–µ

---

## üéØ –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä

### **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ:**
- üìä **–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –≤–µ—Å** - –≤–∑–≤–µ—à–∏–≤–∞–π—Ç–µ—Å—å —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é
- üìä **–ò–∑–º–µ—Ä—è–π—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ** - –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–Ω–æ–º–µ—Ç—Ä
- üìä **–°–ª–µ–¥–∏—Ç–µ –∑–∞ —à–µ–≤–µ–ª–µ–Ω–∏—è–º–∏** - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–∞–ª—ã—à–∞

### **–ï–∂–µ–º–µ—Å—è—á–Ω–æ:**
- üè• **–ü–æ—Å–µ—â–∞–π—Ç–µ –≤—Ä–∞—á–∞** –ø–æ –≥—Ä–∞—Ñ–∏–∫—É
- üè• **–°–¥–∞–≤–∞–π—Ç–µ –∞–Ω–∞–ª–∏–∑—ã** –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é
- üè• **–î–µ–ª–∞–π—Ç–µ –£–ó–ò** –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏

---

> **üí° –ü–æ–º–Ω–∏—Ç–µ:** –ö–∞–∂–¥–∞—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–∞. –î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–º—É –≤—Ä–∞—á—É –∏ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤–µ–¥—É—â–∏—Ö –∞–∫—É—à–µ—Ä–æ–≤-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–æ–≤.*'''
            ]
        }
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    generated_content = []
    
    if category in templates:
        template = templates[category]
        titles = template['titles']
        images = template['images']
        contents = template.get('content', [])
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
        latest_news = get_latest_news(category)
        
        for i in range(min(count, len(titles))):
            title = titles[i].format(trimester=trimester)
            image_url = images[i % len(images)]
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if i < len(contents):
                content = contents[i].format(trimester=trimester)
            else:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
                if latest_news:
                    news_item = latest_news[i % len(latest_news)]
                    content = f'''# {title}

![–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏]({image_url})

## üì∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏

{news_item['title']}

*–ò—Å—Ç–æ—á–Ω–∏–∫: {news_item['source']}*
*–î–∞—Ç–∞: {news_item['date']}*

---

## üí° –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞.

---

## üéØ –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã

- ‚úÖ **–ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**
- ‚úÖ **–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**
- ‚úÖ **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã**
- ‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞**

---

## üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –≤—Ä–∞—á—É –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.*'''
                else:
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
                    content = f'''# {title}

![–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö]({image_url})

## üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∂–µ–Ω—â–∏–Ω –≤ {trimester} —Ç—Ä–∏–º–µ—Å—Ç—Ä–µ.

---

## üéØ –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã

- ‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –º–∞–º—ã –∏ –º–∞–ª—ã—à–∞**
- ‚úÖ **–ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**
- ‚úÖ **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã**
- ‚úÖ **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞**

---

## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –≤—Ä–∞—á—É.

---

*–°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ UMAY Mama.*'''
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            new_content = MamaContent(
                title=title,
                content=content,
                category=category,
                image_url=image_url,
                trimester=trimester,
                difficulty_level='medium',
                duration='15-30 –º–∏–Ω—É—Ç',
                author='UMAY Mama',
                is_published=True
            )
            
            db.session.add(new_content)
            generated_content.append(new_content)
    
    db.session.commit()
    return generated_content

@app.route('/admin/media')
@login_required
@admin_required
def admin_media():
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        flash('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.', 'error')
        return redirect(url_for('dashboard'))
    
    media = MediaFile.query.order_by(MediaFile.uploaded_at.desc()).all()
    return render_template('admin/media.html', media=media)

@app.route('/admin/media/upload', methods=['POST'])
@login_required
def admin_media_upload():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤"""
    if current_user.user_type != 'admin' and current_user.login != 'Joker':
        return jsonify({'error': '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.'}), 403
    
    if 'file' not in request.files:
        return jsonify({'error': '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω'}), 400
    
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω'}), 400
    
    if file:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        os.makedirs('static/uploads', exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        import uuid
        filename = str(uuid.uuid4()) + '.' + file.filename.rsplit('.', 1)[1].lower()
        file_path = os.path.join('static/uploads', filename)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        file.save(file_path)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        file_type = 'image' if file.filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.webp')) else 'document'
        if file.filename.lower().endswith(('.mp4', '.avi', '.mov', '.wmv')):
            file_type = 'video'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        media_file = MediaFile(
            filename=filename,
            original_filename=file.filename,
            file_path=file_path,
            file_type=file_type,
            file_size=os.path.getsize(file_path),
            uploaded_by=current_user.full_name
        )
        
        db.session.add(media_file)
        db.session.commit()
        
        return jsonify({
            'success': True,
            'filename': filename,
            'url': url_for('static', filename=f'uploads/{filename}')
        })
    
    return jsonify({'error': '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞'}), 500

# ============================================================================
# –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –ö–û–ù–¢–ï–ù–¢–ê
# ============================================================================

@app.route('/news')
def news_list():
    """–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    news = News.query.filter_by(is_published=True).order_by(News.published_at.desc()).all()
    return render_template('news/list.html', news=news)

@app.route('/news/<int:news_id>')
def news_detail(news_id):
    """–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–∏"""
    news = News.query.get_or_404(news_id)
    if news.is_published:
        news.views += 1
        db.session.commit()
    return render_template('news/detail.html', news=news)

@app.route('/mama')
def mama_content():
    """–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
    categories = {
        'sport': '–°–ø–æ—Ä—Ç',
        'nutrition': '–ü–∏—Ç–∞–Ω–∏–µ', 
        'vitamins': '–í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω—ã–º',
        'doctor_advice': '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    selected_category = request.args.get('category', 'sport')
    content = MamaContent.query.filter_by(
        category=selected_category
    ).order_by(MamaContent.created_at.desc()).all()
    
    return render_template('mama/content.html', 
                         content=content, 
                         categories=categories,
                         selected_category=selected_category)

@app.route('/mama/article/<int:content_id>')
def mama_article_detail(content_id):
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ UMAY Mama"""
    article = MamaContent.query.get_or_404(content_id)
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    article.views = (article.views or 0) + 1
    db.session.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    categories = {
        'sport': '–°–ø–æ—Ä—Ç',
        'nutrition': '–ü–∏—Ç–∞–Ω–∏–µ', 
        'vitamins': '–í–∏—Ç–∞–º–∏–Ω—ã',
        'body_care': '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
        'baby_care': '–£—Ö–æ–¥ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω—ã–º',
        'doctor_advice': '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π'
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏
    similar_articles = MamaContent.query.filter_by(
        category=article.category
    ).filter(
        MamaContent.id != article.id
    ).order_by(MamaContent.created_at.desc()).limit(3).all()
    
    return render_template('mama/article_detail.html',
                         article=article,
                         categories=categories,
                         similar_articles=similar_articles)

@app.route('/export_csv')
@login_required
@pro_required
def export_csv():
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    start_date = request.args.get('start_date')
    end_date = request.args.get('end_date')
    user_only = request.args.get('user_only', 'false').lower() == 'true'
    
    # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    query = Patient.query
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–∞–º
    if start_date:
        query = query.filter(Patient.birth_date >= start_date)
    if end_date:
        query = query.filter(Patient.birth_date <= end_date)
    
    # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_only:
        query = query.filter(Patient.midwife == current_user.full_name)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    patients = query.all()
    
    if not patients:
        flash('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ', 'error')
        return redirect(url_for('dashboard'))
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    data = []
    for patient in patients:
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—É—à–µ—Ä–∫–µ
        midwife_info = None
        with app.app_context():
            midwife_info = db.session.query(UserPro).filter_by(full_name=patient.midwife).first()
        midwife_position = midwife_info.position if midwife_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        midwife_department = getattr(midwife_info, 'department', '–ù–µ —É–∫–∞–∑–∞–Ω–æ') if midwife_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        midwife_institution = midwife_info.medical_institution if midwife_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        
        data.append({
            '–î–∞—Ç–∞': patient.date,
            '–§–ò–û —Ä–æ–∂–µ–Ω–∏—Ü—ã': patient.patient_name,
            '–í–æ–∑—Ä–∞—Å—Ç': patient.age,
            '–°—Ä–æ–∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏': patient.pregnancy_weeks,
            '–í–µ—Å –¥–æ —Ä–æ–¥–æ–≤': patient.weight_before,
            '–í–µ—Å –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤': patient.weight_after,
            '–û—Å–ª–æ–∂–Ω–µ–Ω–∏—è': patient.complications,
            '–ü—Ä–∏–º–µ—á–∞–Ω–∏—è': patient.notes,
            '–ê–∫—É—à–µ—Ä–∫–∞': patient.midwife,
            '–î–æ–ª–∂–Ω–æ—Å—Ç—å –∞–∫—É—à–µ—Ä–∫–∏': midwife_position,
            '–£—á—Ä–µ–∂–¥–µ–Ω–∏–µ –∞–∫—É—à–µ—Ä–∫–∏': midwife_institution,
            '–û—Ç–¥–µ–ª–µ–Ω–∏–µ –∞–∫—É—à–µ—Ä–∫–∏': midwife_department,
            '–î–∞—Ç–∞ —Ä–æ–¥–æ–≤': patient.birth_date,
            '–í—Ä–µ–º—è —Ä–æ–¥–æ–≤': patient.birth_time,
            '–ü–æ–ª —Ä–µ–±–µ–Ω–∫–∞': patient.child_gender,
            '–í–µ—Å —Ä–µ–±–µ–Ω–∫–∞': patient.child_weight,
            '–°–ø–æ—Å–æ–± —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è': patient.delivery_method,
            '–ê–Ω–µ—Å—Ç–µ–∑–∏—è': patient.anesthesia,
            '–ö—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä—è': patient.blood_loss,
            '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–æ–¥–æ–≤': patient.labor_duration,
            '–°–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è': patient.other_diseases,
            '–ì–µ—Å—Ç–æ–∑': patient.gestosis,
            '–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç': patient.diabetes,
            '–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è': patient.hypertension,
            '–ê–Ω–µ–º–∏—è': patient.anemia,
            '–ò–Ω—Ñ–µ–∫—Ü–∏–∏': patient.infections,
            '–ü–∞—Ç–æ–ª–æ–≥–∏—è –ø–ª–∞—Ü–µ–Ω—Ç—ã': patient.placenta_pathology,
            '–ú–Ω–æ–≥–æ–≤–æ–¥–∏–µ': patient.polyhydramnios,
            '–ú–∞–ª–æ–≤–æ–¥–∏–µ': patient.oligohydramnios
        })
    
    df = pd.DataFrame(data)
    output = io.StringIO()
    df.to_csv(output, index=False, encoding='utf-8-sig')
    output.seek(0)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–∏–æ–¥–æ–º
    period_suffix = ""
    if start_date and end_date:
        period_suffix = f"_{start_date}_to_{end_date}"
    elif start_date:
        period_suffix = f"_from_{start_date}"
    elif end_date:
        period_suffix = f"_until_{end_date}"
    
    return send_file(
        io.BytesIO(output.getvalue().encode('utf-8-sig')),
        mimetype='text/csv',
        as_attachment=True,
        download_name=f'umay_patients{period_suffix}_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv'
    )

@app.route('/analytics')
@login_required
@pro_required
def analytics():
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patients = Patient.query.all()
        
        if not patients:
            logger.warning("‚ö†Ô∏è No patients found in database")
            return render_template('analytics.html', 
                                total_patients=0,
                                male_count=0, female_count=0, avg_age=0,
                                delivery_methods={}, complications={}, anesthesia_types={},
                                avg_child_weight=0, avg_pregnancy_weeks=0, avg_blood_loss=0, avg_labor_duration=0,
                                monthly_trends={}, blood_loss_stats={})
        
        # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_patients = len(patients)
        male_count = sum(1 for p in patients if p.child_gender == '–ú–∞–ª—å—á–∏–∫')
        female_count = sum(1 for p in patients if p.child_gender == '–î–µ–≤–æ—á–∫–∞')
        avg_age = sum(p.age for p in patients) / total_patients if total_patients > 0 else 0
        
        # –°–ø–æ—Å–æ–±—ã —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        delivery_methods = {}
        for patient in patients:
            method = patient.delivery_method or '–ù–µ —É–∫–∞–∑–∞–Ω'
            delivery_methods[method] = delivery_methods.get(method, 0) + 1
        
        # –û—Å–ª–æ–∂–Ω–µ–Ω–∏—è
        complications = {}
        for patient in patients:
            if patient.gestosis == '–î–∞':
                complications['–ì–µ—Å—Ç–æ–∑'] = complications.get('–ì–µ—Å—Ç–æ–∑', 0) + 1
            if patient.diabetes == '–î–∞':
                complications['–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç'] = complications.get('–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç', 0) + 1
            if patient.hypertension == '–î–∞':
                complications['–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è'] = complications.get('–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è', 0) + 1
            if patient.anemia == '–î–∞':
                complications['–ê–Ω–µ–º–∏—è'] = complications.get('–ê–Ω–µ–º–∏—è', 0) + 1
            if patient.infections == '–î–∞':
                complications['–ò–Ω—Ñ–µ–∫—Ü–∏–∏'] = complications.get('–ò–Ω—Ñ–µ–∫—Ü–∏–∏', 0) + 1
            if patient.pls == '–î–∞':
                complications['–ü–õ–°'] = complications.get('–ü–õ–°', 0) + 1
            if patient.pts == '–î–∞':
                complications['–ü–¢–°'] = complications.get('–ü–¢–°', 0) + 1
            if patient.eclampsia == '–î–∞':
                complications['–≠–∫–ª–∞–º–ø—Å–∏—è'] = complications.get('–≠–∫–ª–∞–º–ø—Å–∏—è', 0) + 1
            if patient.gestational_hypertension == '–î–∞':
                complications['–ì–µ—Å—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è'] = complications.get('–ì–µ—Å—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è', 0) + 1
            if patient.placenta_previa == '–î–∞':
                complications['–ü–ª–æ—Ç–Ω–æ–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–∞'] = complications.get('–ü–ª–æ—Ç–Ω–æ–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–∞', 0) + 1
            if patient.shoulder_dystocia == '–î–∞':
                complications['–î–∏—Å—Ç–æ—Ü–∏—è –ø–ª–µ—á–∏–∫–æ–≤'] = complications.get('–î–∏—Å—Ç–æ—Ü–∏—è –ø–ª–µ—á–∏–∫–æ–≤', 0) + 1
            if patient.third_degree_tear == '–î–∞':
                complications['–†–∞–∑—Ä—ã–≤ 3 —Å—Ç–µ–ø–µ–Ω–∏'] = complications.get('–†–∞–∑—Ä—ã–≤ 3 —Å—Ç–µ–ø–µ–Ω–∏', 0) + 1
            if patient.cord_prolapse == '–î–∞':
                complications['–í—ã–ø–∞–¥–µ–Ω–∏–µ –ø–µ—Ç–µ–ª—å –ø—É–ø–æ–≤–∏–Ω—ã'] = complications.get('–í—ã–ø–∞–¥–µ–Ω–∏–µ –ø–µ—Ç–µ–ª—å –ø—É–ø–æ–≤–∏–Ω—ã', 0) + 1
            if patient.postpartum_hemorrhage == '–î–∞':
                complications['–ü–†–ö'] = complications.get('–ü–†–ö', 0) + 1
            if patient.placental_abruption == '–î–∞':
                complications['–ü–û–ù–†–ü'] = complications.get('–ü–û–ù–†–ü', 0) + 1
        
        # –¢–∏–ø—ã –∞–Ω–µ—Å—Ç–µ–∑–∏–∏
        anesthesia_types = {}
        for patient in patients:
            anesthesia = patient.anesthesia or '–ù–µ —É–∫–∞–∑–∞–Ω'
            anesthesia_types[anesthesia] = anesthesia_types.get(anesthesia, 0) + 1
        
        # –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
        avg_child_weight = sum(p.child_weight for p in patients) / total_patients if total_patients > 0 else 0
        avg_pregnancy_weeks = sum(p.pregnancy_weeks for p in patients) / total_patients if total_patients > 0 else 0
        avg_blood_loss = sum(p.blood_loss for p in patients) / total_patients if total_patients > 0 else 0
        avg_labor_duration = sum(p.labor_duration for p in patients) / total_patients if total_patients > 0 else 0
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä–∏
        blood_loss_stats = {
            '–ù–æ—Ä–º–∞–ª—å–Ω–∞—è (–¥–æ 500 –º–ª)': sum(1 for p in patients if p.blood_loss <= 500),
            '–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è (500-1000 –º–ª)': sum(1 for p in patients if 500 < p.blood_loss <= 1000),
            '–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è (1000+ –º–ª)': sum(1 for p in patients if p.blood_loss > 1000)
        }
        
        # –ú–µ—Å—è—á–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
        monthly_trends = {}
        for patient in patients:
            try:
                birth_date = datetime.strptime(patient.birth_date, '%Y-%m-%d')
                month_key = birth_date.strftime('%B %Y')
                monthly_trends[month_key] = monthly_trends.get(month_key, 0) + 1
            except:
                continue
        
        return render_template('analytics.html',
                            total_patients=total_patients,
                            male_count=male_count, female_count=female_count, avg_age=round(avg_age, 1),
                            delivery_methods=delivery_methods, complications=complications, 
                            anesthesia_types=anesthesia_types,
                            avg_child_weight=round(avg_child_weight, 0),
                            avg_pregnancy_weeks=round(avg_pregnancy_weeks, 1),
                            avg_blood_loss=round(avg_blood_loss, 0),
                            avg_labor_duration=round(avg_labor_duration, 1),
                            blood_loss_stats=blood_loss_stats,
                            monthly_trends=monthly_trends)
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏', 'error')
        return redirect(url_for('dashboard'))

@app.route('/export_pdf')
@login_required
@pro_required
def export_pdf():
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∫—Ä–∞—Å–∏–≤—ã–π PDF –æ—Ç—á–µ—Ç"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        start_date = request.args.get('start_date')
        end_date = request.args.get('end_date')
        user_only = request.args.get('user_only', 'false').lower() == 'true'
        
        # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        query = Patient.query
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–∞–º
        if start_date:
            query = query.filter(Patient.birth_date >= start_date)
        if end_date:
            query = query.filter(Patient.birth_date <= end_date)
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_only:
            query = query.filter(Patient.midwife == current_user.full_name)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patients = query.all()
        
        if not patients:
            flash('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ', 'error')
            return redirect(url_for('dashboard'))
        
        # –°–æ–∑–¥–∞–µ–º PDF –≤ –ø–∞–º—è—Ç–∏
        buffer = io.BytesIO()
        doc = SimpleDocTemplate(buffer, pagesize=A4)
        story = []
        
        # –°—Ç–∏–ª–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã ReportLab
        styles = getSampleStyleSheet()
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞–¥–µ–∂–Ω—ã–π —à—Ä–∏—Ñ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        from reportlab.pdfbase.cidfonts import UnicodeCIDFont
        try:
            pdfmetrics.registerFont(UnicodeCIDFont('STSong-Light'))
            font_name = 'STSong-Light'
        except:
            try:
                # Fallback –Ω–∞ –¥—Ä—É–≥–æ–π —à—Ä–∏—Ñ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
                pdfmetrics.registerFont(UnicodeCIDFont('HeiseiMin-W3'))
                font_name = 'HeiseiMin-W3'
            except:
                # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
                font_name = 'Helvetica'
                logger.warning("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç Helvetica")
        title_style = ParagraphStyle(
            'CustomTitle',
            parent=styles['Heading1'],
            fontSize=24,
            spaceAfter=30,
            alignment=1,  # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
            textColor=colors.HexColor('#1e40af'),  # –°–∏–Ω–∏–π —Ü–≤–µ—Ç
            fontName=font_name  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à —à—Ä–∏—Ñ—Ç
        )
        
        subtitle_style = ParagraphStyle(
            'CustomSubtitle',
            parent=styles['Heading2'],
            fontSize=16,
            spaceAfter=20,
            textColor=colors.HexColor('#374151'),  # –°–µ—Ä—ã–π —Ü–≤–µ—Ç
            fontName=font_name  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à —à—Ä–∏—Ñ—Ç
        )
        
        normal_style = ParagraphStyle(
            'CustomNormal',
            parent=styles['Normal'],
            fontSize=10,
            spaceAfter=6,
            fontName=font_name  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à —à—Ä–∏—Ñ—Ç
        )
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        story.append(Paragraph("üè• UMAY - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ—Ç—á–µ—Ç", title_style))
        story.append(Paragraph(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}", normal_style))
        story.append(Paragraph(f"–í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patients)}", normal_style))
        story.append(Spacer(1, 20))
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        story.append(Paragraph("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", subtitle_style))
        
        # –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        total_patients = len(patients)
        avg_age = sum(p.age for p in patients) / total_patients
        avg_pregnancy_weeks = sum(p.pregnancy_weeks for p in patients) / total_patients
        avg_child_weight = sum(p.child_weight for p in patients) / total_patients
        
        # –ü–æ–¥—Å—á–µ—Ç –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π
        gestosis_count = sum(1 for p in patients if p.gestosis == '–î–∞')
        diabetes_count = sum(1 for p in patients if p.diabetes == '–î–∞')
        hypertension_count = sum(1 for p in patients if p.hypertension == '–î–∞')
        anemia_count = sum(1 for p in patients if p.anemia == '–î–∞')
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–ø–æ—Å–æ–±–æ–≤ —Ä–æ–¥–æ—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        natural_births = sum(1 for p in patients if p.delivery_method == '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã')
        cesarean_count = sum(1 for p in patients if p.delivery_method == '–ö–µ—Å–∞—Ä–µ–≤–æ —Å–µ—á–µ–Ω–∏–µ')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_data = [
            ['–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å', '–ó–Ω–∞—á–µ–Ω–∏–µ'],
            ['–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤', str(total_patients)],
            ['–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç', f'{avg_age:.1f} –ª–µ—Ç'],
            ['–°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏', f'{avg_pregnancy_weeks:.1f} –Ω–µ–¥–µ–ª—å'],
            ['–°—Ä–µ–¥–Ω–∏–π –≤–µ—Å —Ä–µ–±–µ–Ω–∫–∞', f'{avg_child_weight:.0f} –≥'],
            ['–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–¥—ã', f'{natural_births} ({natural_births/total_patients*100:.1f}%)'],
            ['–ö–µ—Å–∞—Ä–µ–≤–æ —Å–µ—á–µ–Ω–∏–µ', f'{cesarean_count} ({cesarean_count/total_patients*100:.1f}%)'],
            ['–ì–µ—Å—Ç–æ–∑', f'{gestosis_count} ({gestosis_count/total_patients*100:.1f}%)'],
            ['–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç', f'{diabetes_count} ({diabetes_count/total_patients*100:.1f}%)'],
            ['–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è', f'{hypertension_count} ({hypertension_count/total_patients*100:.1f}%)'],
            ['–ê–Ω–µ–º–∏—è', f'{anemia_count} ({anemia_count/total_patients*100:.1f}%)']
        ]
        
        stats_table = Table(stats_data)
        stats_table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#3b82f6')),
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
            ('FONTNAME', (0, 0), (-1, 0), font_name),
            ('FONTSIZE', (0, 0), (-1, 0), 12),
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
            ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#f8fafc')),
            ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#e2e8f0')),
            ('FONTNAME', (0, 1), (-1, -1), font_name),
            ('FONTSIZE', (0, 1), (-1, -1), 10),
            ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#f1f5f9')])
        ]))
        
        story.append(stats_table)
        story.append(Spacer(1, 30))
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–∞—Ö
        story.append(Paragraph("üë• –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–∞—Ö", subtitle_style))
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patient_data = [['–§–ò–û', '–í–æ–∑—Ä–∞—Å—Ç', '–°—Ä–æ–∫', '–í–µ—Å —Ä–µ–±–µ–Ω–∫–∞', '–ü–æ–ª', '–°–ø–æ—Å–æ–± —Ä–æ–¥–æ–≤', '–ê–∫—É—à–µ—Ä–∫–∞', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–û—Ç–¥–µ–ª–µ–Ω–∏–µ']]
        
        for patient in patients:
            # –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—É—à–µ—Ä–∫–µ
            midwife_info = None
            with app.app_context():
                midwife_info = db.session.query(UserPro).filter_by(full_name=patient.midwife).first()
            midwife_position = midwife_info.position if midwife_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            midwife_department = getattr(midwife_info, 'department', '–ù–µ —É–∫–∞–∑–∞–Ω–æ') if midwife_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            
            patient_data.append([
                patient.patient_name,
                str(patient.age),
                f'{patient.pregnancy_weeks} –Ω–µ–¥',
                f'{patient.child_weight} –≥',
                patient.child_gender,
                patient.delivery_method,
                patient.midwife,
                midwife_position,
                midwife_department
            ])
        
        patient_table = Table(patient_data)
        patient_table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#10b981')),
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
            ('FONTNAME', (0, 0), (-1, 0), font_name),
            ('FONTSIZE', (0, 0), (-1, 0), 10),
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
            ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#f0fdf4')),
            ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#bbf7d0')),
            ('FONTNAME', (0, 1), (-1, -1), font_name),
            ('FONTSIZE', (0, 1), (-1, -1), 8),
            ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#f0fdf4')])
        ]))
        
        story.append(patient_table)
        story.append(Spacer(1, 30))
        
        # –û—Å–ª–æ–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
        story.append(Paragraph("‚ö†Ô∏è –û—Å–ª–æ–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è", subtitle_style))
        
        complications_data = []
        for patient in patients:
            if patient.complications or patient.notes:
                complications_data.append([
                    patient.patient_name,
                    patient.complications or '–ù–µ—Ç',
                    patient.notes or '–ù–µ—Ç'
                ])
        
        if complications_data:
            complications_table = Table([['–ü–∞—Ü–∏–µ–Ω—Ç', '–û—Å–ª–æ–∂–Ω–µ–Ω–∏—è', '–ü—Ä–∏–º–µ—á–∞–Ω–∏—è']] + complications_data)
            complications_table.setStyle(TableStyle([
                ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#f59e0b')),
                ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
                ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
                ('FONTNAME', (0, 0), (-1, 0), font_name),
                ('FONTSIZE', (0, 0), (-1, 0), 10),
                ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
                ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#fef3c7')),
                ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#fde68a')),
                ('FONTNAME', (0, 1), (-1, -1), font_name),
                ('FONTSIZE', (0, 1), (-1, -1), 8),
                ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#fef3c7')])
            ]))
            story.append(complications_table)
        else:
            story.append(Paragraph("–û—Å–ª–æ–∂–Ω–µ–Ω–∏–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ", normal_style))
        
        story.append(Spacer(1, 30))
        
        # –ü–æ–¥–ø–∏—Å—å
        story.append(Paragraph("–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π UMAY", normal_style))
        story.append(Paragraph("¬© 2024 UMAY - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", normal_style))
        
        # ========================================
        # –î–û–ë–ê–í–õ–Ø–ï–ú –ì–†–ê–§–ò–ö–ò –ò –î–ò–ê–ì–†–ê–ú–ú–´
        # ========================================
        
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º
        story.append(Paragraph("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º", subtitle_style))
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º
        age_groups = {}
        for patient in patients:
            age_group = f"{(patient.age // 5) * 5}-{(patient.age // 5) * 5 + 4}"
            age_groups[age_group] = age_groups.get(age_group, 0) + 1
        
        age_data = [['–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤']]
        for age_group, count in sorted(age_groups.items()):
            age_data.append([age_group, str(count)])
        
        age_table = Table(age_data)
        age_table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#8b5cf6')),
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
            ('FONTNAME', (0, 0), (-1, 0), font_name),
            ('FONTSIZE', (0, 0), (-1, 0), 10),
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
            ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#f3f4f6')),
            ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#d1d5db')),
            ('FONTNAME', (0, 1), (-1, -1), font_name),
            ('FONTSIZE', (0, 1), (-1, -1), 9),
            ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#f9fafb')])
        ]))
        
        story.append(age_table)
        story.append(Spacer(1, 20))
        
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ —Å—Ä–æ–∫–∞–º –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
        story.append(Paragraph("ü§∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ä–æ–∫–∞–º –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏", subtitle_style))
        
        trimester_data = [['–¢—Ä–∏–º–µ—Å—Ç—Ä', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤', '–ü—Ä–æ—Ü–µ–Ω—Ç']]
        first_trimester = sum(1 for p in patients if p.pregnancy_weeks <= 13)
        second_trimester = sum(1 for p in patients if 14 <= p.pregnancy_weeks <= 27)
        third_trimester = sum(1 for p in patients if p.pregnancy_weeks >= 28)
        
        trimester_data.extend([
            ['I —Ç—Ä–∏–º–µ—Å—Ç—Ä (1-13 –Ω–µ–¥)', str(first_trimester), f'{first_trimester/total_patients*100:.1f}%'],
            ['II —Ç—Ä–∏–º–µ—Å—Ç—Ä (14-27 –Ω–µ–¥)', str(second_trimester), f'{second_trimester/total_patients*100:.1f}%'],
            ['III —Ç—Ä–∏–º–µ—Å—Ç—Ä (28+ –Ω–µ–¥)', str(third_trimester), f'{third_trimester/total_patients*100:.1f}%']
        ])
        
        trimester_table = Table(trimester_data)
        trimester_table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#ec4899')),
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
            ('FONTNAME', (0, 0), (-1, 0), font_name),
            ('FONTSIZE', (0, 0), (-1, 0), 10),
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
            ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#fdf2f8')),
            ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#fbcfe8')),
            ('FONTNAME', (0, 1), (-1, -1), font_name),
            ('FONTSIZE', (0, 1), (-1, -1), 9),
            ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#fdf2f8')])
        ]))
        
        story.append(trimester_table)
        story.append(Spacer(1, 20))
        
        # –ì—Ä–∞—Ñ–∏–∫ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π
        story.append(Paragraph("‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π", subtitle_style))
        
        complications_summary = [['–û—Å–ª–æ–∂–Ω–µ–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–ü—Ä–æ—Ü–µ–Ω—Ç']]
        complications_list = [
            ('–ì–µ—Å—Ç–æ–∑', gestosis_count),
            ('–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç', diabetes_count),
            ('–ì–∏–ø–µ—Ä—Ç–æ–Ω–∏—è', hypertension_count),
            ('–ê–Ω–µ–º–∏—è', anemia_count)
        ]
        
        for complication, count in complications_list:
            complications_summary.append([
                complication,
                str(count),
                f'{count/total_patients*100:.1f}%'
            ])
        
        complications_summary_table = Table(complications_summary)
        complications_summary_table.setStyle(TableStyle([
            ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#ef4444')),
            ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
            ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
            ('FONTNAME', (0, 0), (-1, 0), font_name),
            ('FONTSIZE', (0, 0), (-1, 0), 10),
            ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
            ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#fef2f2')),
            ('GRID', (0, 0), (-1, -1), 1, colors.HexColor('#fecaca')),
            ('FONTNAME', (0, 1), (-1, -1), font_name),
            ('FONTSIZE', (0, 1), (-1, -1), 9),
            ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.white, colors.HexColor('#fef2f2')])
        ]))
        
        story.append(complications_summary_table)
        story.append(Spacer(1, 30))
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
        story.append(Paragraph("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞", subtitle_style))
        
        recommendations = []
        
        if gestosis_count > total_patients * 0.1:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 10%
            recommendations.append("‚Ä¢ –í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≥–µ—Å—Ç–æ–∑–∞ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å–∏–ª–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è")
        
        if diabetes_count > total_patients * 0.05:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 5%
            recommendations.append("‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ –≥–µ—Å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –¥–∏–∞–±–µ—Ç–∞ - —É—Å–∏–ª–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Ä–æ–≤–Ω—è —Å–∞—Ö–∞—Ä–∞")
        
        if hypertension_count > total_patients * 0.08:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 8%
            recommendations.append("‚Ä¢ –ß–∞—Å—Ç—ã–µ —Å–ª—É—á–∞–∏ –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞")
        
        if anemia_count > total_patients * 0.15:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 15%
            recommendations.append("‚Ä¢ –í—ã—Å–æ–∫–∞—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ—Å—Ç—å –∞–Ω–µ–º–∏–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –∂–µ–ª–µ–∑–∞")
        
        if not recommendations:
            recommendations.append("‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é –ø—Ä–∞–∫—Ç–∏–∫—É")
        
        for rec in recommendations:
            story.append(Paragraph(rec, normal_style))
        
        story.append(Spacer(1, 30))
        
        # –ü–æ–¥–ø–∏—Å—å
        story.append(Paragraph("–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π UMAY", normal_style))
        story.append(Paragraph("¬© 2024 UMAY - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", normal_style))
        
        # –°–æ–∑–¥–∞–µ–º PDF
        doc.build(story)
        buffer.seek(0)
        
        return send_file(
            buffer,
            mimetype='application/pdf',
            as_attachment=True,
            download_name=f'umay_report_{datetime.now().strftime("%Y%m%d_%H%M%S")}.pdf'
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {e}")
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF –æ—Ç—á–µ—Ç–∞', 'error')
        return redirect(url_for('dashboard'))

# –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
@app.route('/test')
def test():
    return "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Joker —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏."

if __name__ == '__main__':
    logger.info("=== UMAY APP STARTING - SIMPLE VERSION v5.0 ===")
    
    # Create data directory
    data_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'data')
    os.makedirs(data_dir, exist_ok=True)
    logger.info("Data directory created/verified")
    
    print("‚ö†Ô∏è  –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python run_local.py")
    print("üì± –ò–ª–∏: python run_public.py –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
init_database()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
@app.errorhandler(500)
def internal_error(error):
    logger.error(f"Internal Server Error: {error}")
    return render_template('error.html', error_code=500, error_message="–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"), 500

@app.errorhandler(404)
def not_found_error(error):
    logger.error(f"Not Found Error: {error}")
    return render_template('error.html', error_code=404, error_message="–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"), 404 

# ======================
# PWA ROUTES - –ö–†–£–¢–û–ï –ú–û–ë–ò–õ–¨–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï
# ======================
@app.route('/pwa/')
@app.route('/pwa/dashboard')
def pwa_dashboard():
    """PWA Dashboard - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üöÄ PWA Dashboard requested")
    try:
        if current_user.is_authenticated:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
            user_data = {
                'name': current_user.full_name,
                'email': current_user.login,
                'app_type': session.get('app_type', 'pro')
            }
            return render_template('pwa/dashboard.html', user=user_data)
        else:
            return redirect(url_for('pwa_login'))
    except Exception as e:
        logger.error(f"‚ùå Error in PWA dashboard: {e}")
        return f"PWA Error: {e}", 500

@app.route('/pwa/login')
def pwa_login():
    """PWA Login - –∫—Ä–∞—Å–∏–≤–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞"""
    logger.info("üöÄ PWA Login requested")
    return render_template('pwa/login.html')

@app.route('/pwa/patients')
def pwa_patients():
    """PWA Patients - —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"""
    logger.info("üöÄ PWA Patients requested")
    if not current_user.is_authenticated:
        return redirect(url_for('pwa_login'))
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patients = []
        if session.get('app_type') == 'pro':
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
            pass
        return render_template('pwa/patients.html', patients=patients)
    except Exception as e:
        logger.error(f"‚ùå Error in PWA patients: {e}")
        return f"PWA Error: {e}", 500

@app.route('/pwa/analytics')
def pwa_analytics():
    """PWA Analytics - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∏"""
    logger.info("üöÄ PWA Analytics requested")
    if not current_user.is_authenticated:
        return redirect(url_for('pwa_login'))
    try:
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        analytics_data = {
            'total_patients': 0,
            'new_this_month': 0,
            'complications_rate': 0
        }
        return render_template('pwa/analytics.html', data=analytics_data)
    except Exception as e:
        logger.error(f"‚ùå Error in PWA analytics: {e}")
        return f"PWA Error: {e}", 500

@app.route('/pwa/settings')
def pwa_settings():
    """PWA Settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üöÄ PWA Settings requested")
    if not current_user.is_authenticated:
        return redirect(url_for('pwa_login'))
    try:
        user_data = {
            'name': current_user.full_name,
            'email': current_user.login,
            'phone': getattr(current_user, 'phone', '–ù–µ —É–∫–∞–∑–∞–Ω')
        }
        return render_template('pwa/settings.html', user=user_data)
    except Exception as e:
        logger.error(f"‚ùå Error in PWA settings: {e}")
        return f"PWA Error: {e}", 500

@app.route('/pwa/profile')
def pwa_profile():
    """PWA Profile - –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    logger.info("üöÄ PWA Profile requested")
    if not current_user.is_authenticated:
        return redirect(url_for('pwa_login'))
    try:
        user_data = {
            'name': current_user.full_name,
            'email': current_user.login,
            'position': getattr(current_user, 'position', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'),
            'city': getattr(current_user, 'city', '–ù–µ —É–∫–∞–∑–∞–Ω')
        }
        return render_template('pwa/profile.html', user=user_data)
    except Exception as e:
        logger.error(f"‚ùå Error in PWA profile: {e}")
        return f"PWA Error: {e}", 500